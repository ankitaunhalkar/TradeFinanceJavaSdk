<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Use Groovy to customize the Maven build process</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/N--ftreF98w/" /><category term="build process" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Fuse online" scheme="searchisko:content:tags" /><category term="GMaven" scheme="searchisko:content:tags" /><category term="groovy" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="Maven" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="plugin" scheme="searchisko:content:tags" /><category term="software build" scheme="searchisko:content:tags" /><author><name>andrea tarocchi</name></author><id>searchisko:content:id:jbossorg_blog-use_groovy_to_customize_the_maven_build_process</id><updated>2018-10-10T11:00:16Z</updated><published>2018-10-10T11:00:16Z</published><content type="html">&lt;p&gt;&lt;a href="https://maven.apache.org"&gt;Apache Maven&lt;/a&gt; is a popular build automation tool used primarily for Java projects (although it can also be used to build and manage projects written in other languages). Maven uses a &lt;code&gt;pom.xml&lt;/code&gt; file to centrally manage a project&amp;#8217;s build and its dependencies. If you have worked anywhere near to the &lt;a href="https://developers.redhat.com/blog/category/java/"&gt;Java ecosystem&lt;/a&gt; chances are that, for the good or for the bad, you have come across the use of this tool.&lt;/p&gt; &lt;p&gt;Maven plugins are used to enhance and customize the Maven build process; while the &lt;a href="https://maven.apache.org/plugins/"&gt;list of existing plugins&lt;/a&gt; is quite extensive, it is common to need to implement some small changes or tweak the build just a bit, which makes writing a whole plugin feel like overkill.&lt;/p&gt; &lt;p&gt;This post describes a possible solution: the &lt;a href="https://github.com/groovy/GMavenPlus"&gt;GMaven Plus plugin&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-522147"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;GMaven Plus is a Maven plugin for managing Groovy projects with Maven. Among other features, it has an execute script goal that can be configured easily, as shown in the following snippet:&lt;/p&gt; &lt;pre&gt;&amp;#60;build&amp;#62; &amp;#60;plugins&amp;#62; &amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.codehaus.gmavenplus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;gmavenplus-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;1.6.1&amp;#60;/version&amp;#62; &amp;#60;executions&amp;#62; &amp;#60;execution&amp;#62; &amp;#60;goals&amp;#62; &amp;#60;goal&amp;#62;execute&amp;#60;/goal&amp;#62; &amp;#60;/goals&amp;#62; &amp;#60;/execution&amp;#62; &amp;#60;/executions&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;properties&amp;#62; &amp;#60;property&amp;#62; &amp;#60;name&amp;#62;someProp&amp;#60;/name&amp;#62; &amp;#60;value&amp;#62;${someProp}&amp;#60;/value&amp;#62; &amp;#60;/property&amp;#62; &amp;#60;/properties&amp;#62; &amp;#60;scripts&amp;#62; //your Groovy code goes here &amp;#60;/scripts&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.codehaus.groovy&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;groovy-all&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;2.5.0&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;pom&amp;#60;/type&amp;#62; &amp;#60;scope&amp;#62;runtime&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;/dependencies&amp;#62; &amp;#60;/plugin&amp;#62; &amp;#60;/plugins&amp;#62; &amp;#60;/build&amp;#62; &lt;/pre&gt; &lt;p&gt;The execution of the Groovy script can be bound to any Maven phase; furthermore, inside the script, the objects &lt;code&gt;session&lt;/code&gt; and &lt;code&gt;project&lt;/code&gt; can be used to interact with the Maven build. For instance, the project name can be logged with &lt;code&gt;log.info "$project.name"&lt;/code&gt;. (There are other useful Maven objects available to be used in the Groovy script along with other useful goodies like using &lt;code&gt;@Grab&lt;/code&gt; to download external dependencies your script might have; check the &lt;a href="https://github.com/groovy/GMavenPlus/wiki/Examples#execute-scripts"&gt;examples&lt;/a&gt;). Due to the combination of these two capabilities, it is quite easy to extend the Maven build process directly with an inline Groovy script placed directly in the &lt;code&gt;pom.xml&lt;/code&gt; file, as shown above.&lt;/p&gt; &lt;h2&gt;A real-world example&lt;/h2&gt; &lt;p&gt;Instead of using a fictional example to showcase how to use the GMaven Plus plugin for our purposes, I think it would be beneficial to look at a real-world example. The example is taken from the &lt;a href="https://syndesis.io/" target="_blank" rel="noopener"&gt;Syndesis&lt;/a&gt; project.&lt;/p&gt; &lt;p&gt;Syndesis is an integration Platform-as-a-Service (iPaaS) that aims to simplify collaboration between business users, integration experts, and application developers. It is a cloud-native toolchain and runtime, available right from your browser. It is an open source project on which &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse Online&lt;/a&gt; is based.&lt;/p&gt; &lt;figure&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47.png"&gt;&lt;img class=" aligncenter wp-image-524207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47-1024x515.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47.png" alt="Syndesis dashboard" width="2536" height="1275" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47.png 2536w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47-768x386.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-11-45-47-1024x515.png 1024w" sizes="(max-width: 2536px) 100vw, 2536px" /&gt;&lt;/a&gt;&lt;figcaption&gt;Syndesis dashboard&lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;Using just the Syndesis web UI, it is possible to define, run, and manage an integration that, for instance, takes data from Twitter and saves it in a database or sends a message to a messaging system like Apache Kafka or Apache ActiveMQ. These tasks historically required an integration specialist and a developer to work together, sometimes for days, but with Syndesis these tasks can be accomplished in a no-code fashion directly by a business user.&lt;/p&gt; &lt;figure&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34.png"&gt;&lt;img class=" aligncenter wp-image-524217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34-1024x292.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34.png" alt="Syndesis integration editor" width="2525" height="721" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34.png 2525w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34-300x86.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34-768x219.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/Screenshot-from-2018-10-04-12-31-34-1024x292.png 1024w" sizes="(max-width: 2525px) 100vw, 2525px" /&gt;&lt;/a&gt;&lt;figcaption&gt;Syndesis integration editor&lt;/figcaption&gt;&lt;/figure&gt; &lt;p&gt;The platform is extensible through extensions to cover less-standard and more-particular cases (some extensions are collected in their own &lt;a href="https://github.com/syndesisio/syndesis-extensions"&gt;GitHub repository&lt;/a&gt;). Usually, it is a developer that takes care of creating such an extension and building it. In order to do so, the extensions must be built against the version of the Syndesis platform on which they will be loaded. Manually retrieving and setting the Syndesis version in the syndesis-extension project is a tedious and error-prone activity. It would be much better if you could pass the Syndesis platform URL to the build process and Maven would automatically get the right version and use it.&lt;/p&gt; &lt;h2&gt;Solution explained&lt;/h2&gt; &lt;p&gt;The Groovy script in &lt;a href="https://github.com/syndesisio/syndesis-extensions/blob/af61fb81c74ce02cc4cd63451eca4620e8718c46/pom.xml#L114-L180"&gt;syndesis-extension project pom.xml&lt;/a&gt; implements the following logic: the URL is passed in a property named &lt;code&gt;syndesisServerUrl&lt;/code&gt; that is used to dynamically retrieve the Syndesis version and set it as &lt;code&gt;syndesis.version&lt;/code&gt; in the Maven project. If no URL is provided, Maven will fall back to using the &lt;code&gt;syndesis.version&lt;/code&gt; present in the &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;The relevant part of the &lt;code&gt;pom.xml&lt;/code&gt; file is shown below:&lt;/p&gt; &lt;pre&gt;&amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.codehaus.gmavenplus&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;gmavenplus-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;1.6&amp;#60;/version&amp;#62; &amp;#60;executions&amp;#62; &amp;#60;execution&amp;#62; &amp;#60;id&amp;#62;get-syndesis-version&amp;#60;/id&amp;#62; &amp;#60;phase&amp;#62;initialize&amp;#60;/phase&amp;#62; &amp;#60;goals&amp;#62; &amp;#60;goal&amp;#62;execute&amp;#60;/goal&amp;#62; &amp;#60;/goals&amp;#62; &amp;#60;/execution&amp;#62; &amp;#60;/executions&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;scripts&amp;#62; &amp;#60;script&amp;#62; [...] log.debug "START getting syndesis version from a running Syndesis server." def syndesisServerUrl = getPropertyValue('syndesisServerUrl') log.debug "syndesisServerUrl value = $syndesisServerUrl" if( syndesisServerUrl != null ) { [...] String syndesisVersionUrl = syndesisServerUrl+"/api/v1/version" log.info "About to call GET on $syndesisVersionUrl" def version = null try { version = new URL(syndesisVersionUrl).getText(requestProperties: [Accept: 'text/plain']) String syndesisVesrion = new String(version) project.properties.setProperty('syndesis.version', syndesisVesrion) log.info "syndesis.version set to: $syndesisVesrion" } catch(Exception ex) { log.error "Error during syndesis version GET from $syndesisVersionUrl" ex.printStackTrace() throw ex } finally { log.info "Called GET on $syndesisVersionUrl with result $version" } } else { log.info "syndesisServerUrl property not set, the syndesis.version from pom.xml will be used." } [...] String getPropertyValue(String name) { def value = session.userProperties[name] if (value != null) return value //property was defined from command line e.g.: -DpropertyName=value return project.properties[name] } log.debug "END getting syndesis version from a running Syndesis server." &amp;#60;/script&amp;#62; &amp;#60;/scripts&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.codehaus.groovy&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;groovy-all&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;2.4.12&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;runtime&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;/dependencies&amp;#62; &amp;#60;/plugin&amp;#62; &lt;/pre&gt; &lt;p&gt;The above snippet highlights crucial lines. First off, the line &lt;code&gt;&amp;#60;phase&amp;#62;initialize&amp;#60;/phase&amp;#62;&lt;/code&gt; binds the script execution to the initialization phase; hence, it will be executed at the beginning of each Maven build. The rest of the script is a self-explanatory Groovy code implementation of the logic described at the beginning of this section. Perhaps the most crucial line is &lt;code&gt;project.properties.setProperty('syndesis.version', syndesisVersion&lt;/code&gt;, which sets the &lt;code&gt;syndesis.version&lt;/code&gt; property in the Maven &lt;code&gt;project&lt;/code&gt; object. In this way, if a user invokes the build with &lt;code&gt;mvn clean install -DsyndesisServerUrl=https://your.syndesis.server.url&lt;/code&gt;, the Syndesis version is dynamically taken from the provided URL.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;This article presented a way to use the GMaven Plus plugin to tap into a Maven build and interact with it without the need to write a whole Maven plugin. Furthermore, it presented and commented on a real-world usage of that technique in order to provide some context to the discussion.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;linkname=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F10%2Fgroovy-customize-maven-build%2F&amp;#38;title=Use%20Groovy%20to%20customize%20the%20Maven%20build%20process" data-a2a-url="https://developers.redhat.com/blog/2018/10/10/groovy-customize-maven-build/" data-a2a-title="Use Groovy to customize the Maven build process"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/10/groovy-customize-maven-build/"&gt;Use Groovy to customize the Maven build process&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/N--ftreF98w" height="1" width="1" alt=""/&gt;</content><summary>Apache Maven is a popular build automation tool used primarily for Java projects (although it can also be used to build and manage projects written in other languages). Maven uses a pom.xml file to centrally manage a project’s build and its dependencies. If you have worked anywhere near to the Java ecosystem chances are that, for the good or for the bad, you have come across the use of this tool. ...</summary><dc:creator>andrea tarocchi</dc:creator><dc:date>2018-10-10T11:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/10/groovy-customize-maven-build/</feedburner:origLink></entry><entry><title>Early video of #jBPM Case Modeller</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/GHSJt5urLcM/early-video-of-jbpm-case-modeller.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Mark Proctor</name></author><id>searchisko:content:id:jbossorg_blog-early_video_of_jbpm_case_modeller</id><updated>2018-10-09T20:49:06Z</updated><published>2018-10-09T20:49:00Z</published><content type="html">Early video of #jBPM Case Modeller :) UX and L&amp;amp;F improvements to come &lt;a href="https://youtu.be/AjSSKdbM_Ns"&gt;https://youtu.be/AjSSKdbM_Ns&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;iframe allowfullscreen="" frameborder="0" height="270" src="https://www.youtube.com/embed/AjSSKdbM_Ns" width="480"&gt;&lt;/iframe&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=jIlxv8nGBcw:Prj-8mR1u0Q:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=jIlxv8nGBcw:Prj-8mR1u0Q:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=jIlxv8nGBcw:Prj-8mR1u0Q:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=jIlxv8nGBcw:Prj-8mR1u0Q:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/jIlxv8nGBcw" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/GHSJt5urLcM" height="1" width="1" alt=""/&gt;</content><summary>Early video of #jBPM Case Modeller :) UX and L&amp;F improvements to come https://youtu.be/AjSSKdbM_Ns </summary><dc:creator>Mark Proctor</dc:creator><dc:date>2018-10-09T20:49:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/jIlxv8nGBcw/early-video-of-jbpm-case-modeller.html</feedburner:origLink></entry><entry><title>jBPM Business Apps - dashboard demo</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Nj5Xrz9QD7Q/jbpm-business-apps-dashboard-demo.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Tihomir Surdilovic</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_business_apps_dashboard_demo</id><updated>2018-10-09T18:57:05Z</updated><published>2018-10-09T18:57:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-FOqIawW-s7A/W7z2ZtjSH6I/AAAAAAAAhak/M1Iqz-eMOm8GbB7IVs47qD7bZcTLiR1uwCLcBGAs/s1600/Screen%2BShot%2B2018-10-09%2Bat%2B2.53.48%2BPM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="861" data-original-width="1600" height="172" src="https://3.bp.blogspot.com/-FOqIawW-s7A/W7z2ZtjSH6I/AAAAAAAAhak/M1Iqz-eMOm8GbB7IVs47qD7bZcTLiR1uwCLcBGAs/s320/Screen%2BShot%2B2018-10-09%2Bat%2B2.53.48%2BPM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;This is first part of the "What do after I generate my business app?" series where we show demos that are supposed to give you ideas on how to get started on your own to build really cool business apps.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In this demo we very quickly (seriously less than 20 lines of code) create a dashboard through which we can interact with business processes in our business app. You can follow the steps shown in the video below and get this up and running.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here are the links:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;* Youtube Video:&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe width="320" height="266" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/JHSLN6wcL7o/0.jpg" src="https://www.youtube.com/embed/JHSLN6wcL7o?feature=player_embedded" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;*&lt;a href="https://github.com/tsurdilo/thymeleaf-kie-server-dialect"&gt; Kie Server Dialect project&lt;/a&gt; used in the video (note this location may change soon so look there for a link to the projects new home once its moved).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Happy jBPM Business App coding&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Nj5Xrz9QD7Q" height="1" width="1" alt=""/&gt;</content><summary>This is first part of the "What do after I generate my business app?" series where we show demos that are supposed to give you ideas on how to get started on your own to build really cool business apps. In this demo we very quickly (seriously less than 20 lines of code) create a dashboard through which we can interact with business processes in our business app. You can follow the steps shown in t...</summary><dc:creator>Tihomir Surdilovic</dc:creator><dc:date>2018-10-09T18:57:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/10/jbpm-business-apps-dashboard-demo.html</feedburner:origLink></entry><entry><title>Red Hat Container Development Kit 3.6 now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sp8EOiiw44k/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="CDK" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Container Development Kit" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="minishift" scheme="searchisko:content:tags" /><category term="OKD" scheme="searchisko:content:tags" /><category term="Red Hat Container Development Kit" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_container_development_kit_3_6_now_available</id><updated>2018-10-09T17:05:56Z</updated><published>2018-10-09T17:05:56Z</published><content type="html">&lt;p&gt;We are pleased to announce the availability of &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt; (CDK) 3.6. CDK 3.6 is based on &lt;a href="https://www.okd.io/minishift/"&gt;Minishift&lt;/a&gt; 1.24.0, a command-line tool to quickly provision an &lt;a href="https://www.openshift.com/"&gt;OpenShift&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; cluster on your local machine for developing cloud- and container-based applications. You can run CDK/Minishift on Windows, macOS, or Linux.&lt;/p&gt; &lt;p&gt;Today, we are also announcing the availability of Red Hat Developer Studio 12.9 and JBoss Tools 4.9 for Eclipse 2018-09. You can develop cloud/container-based applications with a familiar desktop IDE that has integrated tooling for CDK/Minishift.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a summary of the new features in CDK 3.6:&lt;/p&gt; &lt;p&gt;&lt;span id="more-526237"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;New features with CDK 3.6&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;CDK now can run a local proxy server to handle proxy issues. The local proxy server assists with the use of CDK in a proxy environment. For more information, see &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_container_development_kit/3.6/html-single/getting_started_guide/#local-proxy-server"&gt;Local Proxy Server&lt;/a&gt;. This feature is a Technical Preview.&lt;/li&gt; &lt;li&gt;Usability improvements: &lt;ul&gt; &lt;li&gt;CDK now saves to the persistent configuration non-default flags given to the &lt;code&gt;minishift start&lt;/code&gt; command. You are not required to explicitly save these settings. To disable this feature, run the following command: &lt;pre&gt;$ minishift config set save-start-flags false&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;You can now start CDK with the latest &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; version by using the following command: &lt;pre&gt;$ minishift start --ocp-tag latest&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;The generic driver for CDK has been improved by performing all of the required steps to allow OpenShift to start on a remote &lt;a href="https://developers.redhat.com/products/rhel/"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) 7 machine.&lt;/li&gt; &lt;li&gt;CDK add-ons are easier to manage with an improved way to express dependencies between add-ons.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;What is CDK?&lt;/h2&gt; &lt;p&gt;CDK is based on Red Hat Enterprise Linux and provides a pre-built container development environment to help you develop &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;container-based applications&lt;/a&gt; quickly using preconfigured and local versions of OpenShift (the industry leading Kubernetes distribution). The containers you build can be easily deployed on any Red Hat container host or platform, including RHEL, Red Hat OpenStack Platform, and OpenShift Container Platform.&lt;/p&gt; &lt;h2&gt;More information&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;See the &lt;a href="https://developers.redhat.com/products/cdk"&gt;CDK product page&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/cdk/download/"&gt;Download&lt;/a&gt; the new version today.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;linkname=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fred-hat-container-development-kit-3-6-now-available%2F&amp;#38;title=Red%20Hat%20Container%20Development%20Kit%203.6%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2018/10/09/red-hat-container-development-kit-3-6-now-available/" data-a2a-title="Red Hat Container Development Kit 3.6 now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/09/red-hat-container-development-kit-3-6-now-available/"&gt;Red Hat Container Development Kit 3.6 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sp8EOiiw44k" height="1" width="1" alt=""/&gt;</content><summary>We are pleased to announce the availability of Red Hat Container Development Kit (CDK) 3.6. CDK 3.6 is based on Minishift 1.24.0, a command-line tool to quickly provision an OpenShift and Kubernetes cluster on your local machine for developing cloud- and container-based applications. You can run CDK/Minishift on Windows, macOS, or Linux. Today, we are also announcing the availability of Red Hat De...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2018-10-09T17:05:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/09/red-hat-container-development-kit-3-6-now-available/</feedburner:origLink></entry><entry><title>Announcing Red Hat Developer Studio 12.9.0.GA and JBoss Tools 4.9.0.Final for Eclipse 2018-09</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BcCnSoEO4nw/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Studio" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse" scheme="searchisko:content:tags" /><category term="Eclipse Desktop" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Fuse Tooling" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="java 10" scheme="searchisko:content:tags" /><category term="java 8" scheme="searchisko:content:tags" /><category term="Java 9" scheme="searchisko:content:tags" /><category term="Java EE" scheme="searchisko:content:tags" /><category term="JavaEE" scheme="searchisko:content:tags" /><category term="javaee7" scheme="searchisko:content:tags" /><category term="jboss developer studio" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Developer Studio" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Jeff Maury</name></author><id>searchisko:content:id:jbossorg_blog-announcing_red_hat_developer_studio_12_9_0_ga_and_jboss_tools_4_9_0_final_for_eclipse_2018_09</id><updated>2018-10-09T14:00:00Z</updated><published>2018-10-09T14:00:00Z</published><content type="html">&lt;p&gt;Attention desktop IDE users: &lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat Developer Studio 12.9&lt;/a&gt; and the community edition, &lt;a href="http://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.Final.html"&gt;JBoss Tools 4.9.0&lt;/a&gt; for Eclipse Photon, are now available. You can download the &lt;a href="https://developers.redhat.com/products/devstudio/download/"&gt;Developer Studio bundled installer&lt;/a&gt;, which installs Eclipse 4.9 with all of the JBoss Tools already configured. Or, if you have an existing Eclipse 4.9 (2018-09) installation, you can download the JBoss Tools package.&lt;/p&gt; &lt;p&gt;This article highlights some of the new features in both JBoss Tools and Eclipse Photon, covering WildFly, Spring Boot, Camel, Maven, and many Java-related improvements—including full Java 10 support.&lt;/p&gt; &lt;p&gt;Developer Studio/JBoss Tools provides a desktop IDE with a broad set of tooling covering multiple programming models and frameworks. If you are doing &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;container&lt;/a&gt;/cloud development, there is integrated functionality for working with &lt;a href="http://openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt;, &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat OpenShift Application Runtimes&lt;/a&gt;. For integration projects, there is tooling covering Camel and &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse&lt;/a&gt; that can be used in both local and cloud deployments.&lt;/p&gt; &lt;p&gt;&lt;span id="more-525257"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Installation&lt;/h2&gt; &lt;h3&gt;Red Hat Developer Studio: Full installation&lt;/h3&gt; &lt;p&gt;Download the &lt;a href="https://developers.redhat.com/products/devstudio/download/"&gt;Developer Studio installer&lt;/a&gt;. The download is a single executable JAR file.  You will need to have a JDK installed. Then, run the installer like this:&lt;/p&gt; &lt;pre&gt;java -jar jboss-devstudio-&amp;#60;installername&amp;#62;.jar&lt;/pre&gt; &lt;h3&gt;Adding JBoss Tools to your existing Eclipse 4.9 environment&lt;/h3&gt; &lt;p&gt;JBoss Tools, which is also known as the Bring-Your-Own-Eclipse (BYOE) option, requires at least Eclipse 4.9 (2018-09), but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2018-09/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.9 2018-09 JEE Bundle&lt;/a&gt; because then you will get most of the dependencies preinstalled.&lt;/p&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us in the &lt;em&gt;Eclipse Marketplace&lt;/em&gt; under &lt;em&gt;JBoss Tools&lt;/em&gt; or &lt;em&gt;Red Hat Developer Studio&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Alternatively, for JBoss Tools, you can also use our update site directly:&lt;/p&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/ &lt;/pre&gt; &lt;h2&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;Our main focus for this release was on the adoption of Java 11, improvements for container-based development, and bug fixing. Eclipse 2018-09 itself has a lot of new cool stuff, but let me highlight just a few updates in both Eclipse 2018-09 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;h3&gt;Improved OpenShift developer tools&lt;/h3&gt; &lt;h4&gt;Inner loop for Spring Boot applications&lt;/h4&gt; &lt;p&gt;Although Spring Boot applications were already supported by the OpenShift server adapter, the global developer experience has been enhanced. Let’s look at the full workflow.&lt;/p&gt; &lt;h5&gt;Bootstrapping your Spring Boot applications&lt;/h5&gt; &lt;p&gt;A new generator (wizard) has been added to JBoss Tools. It’s called the Launcher application as it’s based on the fabric8-launcher project. When you launch JBoss Tools, you should see this in Red Hat Central:&lt;/p&gt; &lt;p id="XnGLgsY"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63.png"&gt;&lt;img class=" aligncenter wp-image-525267 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63.png" alt="Screen that appears when you launch JBoss Tools" width="1002" height="637" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63-300x191.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb053f25f63-768x488.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the &lt;strong&gt;Launcher application&lt;/strong&gt; link and the following wizard will appear:&lt;/p&gt; &lt;p id="AtnWngI"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05bbf2af5.png"&gt;&lt;img class=" aligncenter wp-image-525277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05bbf2af5.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05bbf2af5.png" alt="Wizard screen" width="602" height="804" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05bbf2af5.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05bbf2af5-225x300.png 225w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Set the&lt;strong&gt; Mission&lt;/strong&gt; field to &lt;code&gt;rest-http&lt;/code&gt; because we want to generate a simple REST application, and set the&lt;strong&gt; Runtime&lt;/strong&gt; field to &lt;code&gt;spring-boot current-community&lt;/code&gt; because we want to generate a Spring Boot–based application.&lt;/p&gt; &lt;p&gt;Then set the&lt;strong&gt; Project name&lt;/strong&gt; field to &lt;code&gt;myfirstrestapp&lt;/code&gt; and leave the other fields as-is.&lt;/p&gt; &lt;p id="mWcKIBJ"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05e20249a.png"&gt;&lt;img class=" aligncenter wp-image-525287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05e20249a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05e20249a.png" alt="Screen that shows our changes in the wizard" width="602" height="824" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05e20249a.png 602w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb05e20249a-219x300.png 219w" sizes="(max-width: 602px) 100vw, 602px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click the&lt;strong&gt; Finish&lt;/strong&gt; button. A new project will be added to your local workspace. It may take some time because Maven will resolve all the Spring Boot dependencies and, thus, need to download them from the Internet.&lt;/p&gt; &lt;p&gt;When the project is built, if you expand the &lt;strong&gt;myfirstrestapp&lt;/strong&gt; item in the Project Explorer window, you should see this:&lt;/p&gt; &lt;p id="jrTEAfA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb060e73998.png"&gt;&lt;img class=" aligncenter wp-image-525297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb060e73998.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb060e73998.png" alt="Project Explorer window" width="479" height="455" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb060e73998.png 479w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb060e73998-300x285.png 300w" sizes="(max-width: 479px) 100vw, 479px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Storing your source code on GitHub&lt;/h5&gt; &lt;p&gt;Because OpenShift builder images retrieve code on a Git repository, we first need to push the just-generated application code to GitHub. The following section assumes that you created a repository called &lt;code&gt;myfirstrestapp&lt;/code&gt; under your GitHub account.&lt;/p&gt; &lt;p&gt;We will first create a local Git repository for our application code and then push the code to GitHub.&lt;/p&gt; &lt;p&gt;Select the &lt;strong&gt;myfirstrestapp&lt;/strong&gt; project and right-click the &lt;strong&gt;Team -&amp;#62; Share project&lt;/strong&gt;  menu item:&lt;/p&gt; &lt;p id="QhmjmTd"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1c6161ae2.png"&gt;&lt;img class=" aligncenter wp-image-525317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1c6161ae2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1c6161ae2.png" alt="Selecting the project" width="684" height="485" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1c6161ae2.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1c6161ae2-300x213.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then select the &lt;strong&gt;Git&lt;/strong&gt; repository type and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;p id="kbDiPDH"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1e9084eeb.png"&gt;&lt;img class=" aligncenter wp-image-525327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1e9084eeb.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1e9084eeb.png" alt="Selecting the Git repository" width="747" height="582" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1e9084eeb.png 747w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1e9084eeb-300x234.png 300w" sizes="(max-width: 747px) 100vw, 747px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select the &lt;strong&gt;Use or create repository in parent folder of project&lt;/strong&gt; checkbox and then select the &lt;strong&gt;myfirstrestapp&lt;/strong&gt; project:&lt;/p&gt; &lt;p id="NZJimok"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1eba85267.png"&gt;&lt;img class=" aligncenter wp-image-525337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1eba85267.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1eba85267.png" alt="Configuring the Git repository" width="747" height="582" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1eba85267.png 747w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1eba85267-300x234.png 300w" sizes="(max-width: 747px) 100vw, 747px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the&lt;strong&gt; Create repository&lt;/strong&gt; button and then the&lt;strong&gt; Finish&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;The Project Explorer view is updated:&lt;/p&gt; &lt;p id="GLLmSUo"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1edecb8a6.png"&gt;&lt;img class=" aligncenter wp-image-525347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1edecb8a6.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1edecb8a6.png" alt="Updated Project Explorer view" width="494" height="420" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1edecb8a6.png 494w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1edecb8a6-300x255.png 300w" sizes="(max-width: 494px) 100vw, 494px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select the&lt;strong&gt; myfirstrestapp&lt;/strong&gt; project and right-click the&lt;strong&gt; Team -&amp;#62; Show in Repositories View&lt;/strong&gt; menu item. A new view called &lt;strong&gt;Git Repositories&lt;/strong&gt; will be added to the perspective:&lt;/p&gt; &lt;p id="gxTzAdc"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f070067a.png"&gt;&lt;img class=" aligncenter wp-image-525357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f070067a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f070067a.png" alt="Git Repositories view" width="430" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f070067a.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f070067a-300x190.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Inside this view, select the&lt;strong&gt; Remotes&lt;/strong&gt; node and right-click the&lt;strong&gt; Create Remote&lt;/strong&gt; menu item. The following dialog box will be displayed:&lt;/p&gt; &lt;p id="mUJCiAP"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f21b89cf.png"&gt;&lt;img class=" aligncenter wp-image-525367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f21b89cf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f21b89cf.png" alt="The New Remote dialog box" width="696" height="373" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f21b89cf.png 696w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f21b89cf-300x161.png 300w" sizes="(max-width: 696px) 100vw, 696px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the &lt;strong&gt;OK&lt;/strong&gt; button, and the following dialog box will be displayed:&lt;/p&gt; &lt;p id="lnOwTtP"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f3d4e1e7.png"&gt;&lt;img class=" aligncenter wp-image-525377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f3d4e1e7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f3d4e1e7.png" alt="The Configure Push dialog box" width="684" height="494" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f3d4e1e7.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1f3d4e1e7-300x217.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the&lt;strong&gt; Change&lt;/strong&gt; button and enter &lt;code&gt;git@github.com:GITHUB_USER/myfirstrestapp&lt;/code&gt; in the&lt;strong&gt; URI&lt;/strong&gt; field, replacing &lt;code&gt;GITHUB_USER&lt;/code&gt; with your real GitH username.&lt;/p&gt; &lt;p&gt;Then click the &lt;strong&gt;Finish&lt;/strong&gt; button and then the &lt;strong&gt;Save&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;We are now ready to push our application code to GitHub. Select the &lt;strong&gt;myfirstrestapp&lt;/strong&gt; project in the&lt;strong&gt; Project Explorer&lt;/strong&gt; view, and then right-click &lt;strong&gt;the Team -&amp;#62; Commit&lt;/strong&gt; menu item. A new view call &lt;strong&gt;Git Staging&lt;/strong&gt; will open:&lt;/p&gt; &lt;p id="VsEgBjO"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fa14889c.png"&gt;&lt;img class=" aligncenter wp-image-525387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fa14889c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fa14889c.png" alt="Git Staging view" width="430" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fa14889c.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fa14889c-300x190.png 300w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Double-click on the view title to maximize the view:&lt;/p&gt; &lt;p id="BvAHpFN"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0.png"&gt;&lt;img class=" aligncenter wp-image-525397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0-1024x505.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0.png" alt="Maximizing the Git Staging view" width="1852" height="914" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0.png 1852w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0-768x379.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fbbf1bb0-1024x505.png 1024w" sizes="(max-width: 1852px) 100vw, 1852px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select all the files listed in the&lt;strong&gt; Unstaged changes&lt;/strong&gt; list and click the &lt;strong&gt;+&lt;/strong&gt; button. The files will then move to the &lt;strong&gt;Staged Changes&lt;/strong&gt; list:&lt;/p&gt; &lt;p id="iTdsmqF"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635.png"&gt;&lt;img class=" aligncenter wp-image-525407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635-1024x505.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635.png" alt="The Staged Changes list" width="1852" height="914" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635.png 1852w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635-300x148.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635-768x379.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb1fd637635-1024x505.png 1024w" sizes="(max-width: 1852px) 100vw, 1852px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Enter a commit message (for example, &amp;#8220;Initial version&amp;#8221;) and click the&lt;strong&gt; Commit and Push&lt;/strong&gt; button. The following dialog box will be displayed:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/spring-boot-inner-loop14.png"&gt;&lt;img class=" aligncenter wp-image-526417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/spring-boot-inner-loop14.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/spring-boot-inner-loop14.png" alt="&amp;#34;Push to branch in remote&amp;#34; dialog box" width="684" height="609" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/spring-boot-inner-loop14.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/spring-boot-inner-loop14-300x267.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;p id="TUWSwqG"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb201a9bdd4.png"&gt;&lt;img class=" aligncenter wp-image-525427 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb201a9bdd4.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb201a9bdd4.png" alt="Push Confirmation dialog box" width="684" height="609" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb201a9bdd4.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb201a9bdd4-300x267.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click on the&lt;strong&gt; Finish&lt;/strong&gt; button to start the push operation.&lt;/p&gt; &lt;p&gt;A dialog box with the result of the push operation will be displayed. Click &lt;strong&gt;OK&lt;/strong&gt; to dismiss it.&lt;/p&gt; &lt;h5&gt;Adding Spring Boot Devtools to the packaged application&lt;/h5&gt; &lt;p&gt;In order to support live update on an OpenShift cluster, we must add Spring Boot DevTools to our Spring Boot application.&lt;/p&gt; &lt;p&gt;Open the &lt;code&gt;pom.xml&lt;/code&gt; file in the &lt;code&gt;myfirstrestapp&lt;/code&gt; project. Locate the &lt;code&gt;spring-boot-maven-plugin&lt;/code&gt; and add the following section:&lt;/p&gt; &lt;pre&gt;&amp;#60;configuration&amp;#62; &amp;#60;excludeDevtools&amp;#62;false&amp;#60;/excludeDevtools&amp;#62; &amp;#60;/configuration&amp;#62;&lt;/pre&gt; &lt;p&gt;The whole &lt;code&gt;spring-boot-maven-plugin&lt;/code&gt; section is given below:&lt;/p&gt; &lt;pre&gt;&amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.springframework.boot&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;spring-boot-maven-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;executions&amp;#62; &amp;#60;execution&amp;#62; &amp;#60;goals&amp;#62; &amp;#60;goal&amp;#62;repackage&amp;#60;/goal&amp;#62; &amp;#60;/goals&amp;#62; &amp;#60;configuration&amp;#62; &amp;#60;excludeDevtools&amp;#62;false&amp;#60;/excludeDevtools&amp;#62; &amp;#60;/configuration&amp;#62; &amp;#60;/execution&amp;#62; &amp;#60;/executions&amp;#62; &amp;#60;/plugin&amp;#62;&lt;/pre&gt; &lt;p&gt;Close and save the &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Push the change to GitHub: select &lt;strong&gt;Team -&amp;#62; Commit&lt;/strong&gt; with a new commit message (for example, &amp;#8220;With DevTools&amp;#8221;).&lt;/p&gt; &lt;h5&gt;Deploy the application on OpenShift&lt;/h5&gt; &lt;p&gt;Before we can deploy the application on OpenShift, we must first create an ImageStream on our OpenShift cluster. The reason is that the Spring Boot support relies on S2I builds that will explode the Spring Boot uber JAR when Spring Boot DevTools is present. Because this is not supported by Java-based S2I images, we will use one that supports it, that is, &lt;code&gt;fabric8/s2i-java:2.2&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;First, in the &lt;code&gt;myfirstrestapp&lt;/code&gt; project, create a new JSON file called &lt;code&gt;springboot.json&lt;/code&gt; and set the content of this file to this:&lt;/p&gt; &lt;pre&gt;{ "apiVersion": "image.openshift.io/v1", "kind": "ImageStream", "metadata": { "name": "springboot" }, "spec": { "lookupPolicy": { "local": false }, "tags": [ { "annotations": { "tags": "builder,java" }, "from": { "kind": "DockerImage", "name": "registry.access.redhat.com/fuse7/fuse-java-openshift:1.1" }, "importPolicy": {}, "name": "1.1", "referencePolicy": { "type": "Source" } } ] } }&lt;/pre&gt; &lt;p&gt;Then, from the OpenShift Explorer view, select the OpenShift connection for your cluster (if you don’t have one already defined, you must define it) and right-click on the &lt;strong&gt;New -&amp;#62; Resource&lt;/strong&gt; menu item. The following dialog box will be displayed:&lt;/p&gt; &lt;p id="gMePrLh"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20d5e374c.png"&gt;&lt;img class=" aligncenter wp-image-525437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20d5e374c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20d5e374c.png" alt="&amp;#34;New OpenShift resource&amp;#34; dialog box" width="684" height="472" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20d5e374c.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20d5e374c-300x207.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can select the OpenShift project you want to work with, and then click on the &lt;strong&gt;Browse Workspace&lt;/strong&gt; button and select the &lt;code&gt;springboot.json&lt;/code&gt; file in the &lt;strong&gt;myfirstrestapp&lt;/strong&gt; project:&lt;/p&gt; &lt;p id="zqTLceY"&gt;&lt;img class=" aligncenter wp-image-525447 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20f24093a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20f24093a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20f24093a.png 535w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb20f24093a-273x300.png 273w" sizes="(max-width: 535px) 100vw, 535px" /&gt;&lt;/p&gt; &lt;p&gt;Click the&lt;strong&gt; OK&lt;/strong&gt; and&lt;strong&gt; Finish&lt;/strong&gt; buttons. The new ImageStream will be created and a status dialog box will be displayed:&lt;/p&gt; &lt;p id="UYjpZFL"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2111a2dcc.png"&gt;&lt;img class=" aligncenter wp-image-525457 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2111a2dcc.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2111a2dcc.png" alt="Status dialog box" width="684" height="367" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2111a2dcc.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2111a2dcc-300x161.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Create the application on OpenShift&lt;/h5&gt; &lt;p&gt;We’re now ready to create the application on the OpenShift cluster. Select the OpenShift connection, right-click&lt;strong&gt; New -&amp;#62; Application&lt;/strong&gt; menu item. If you scroll down the list, you should see the &lt;code&gt;springboot&lt;/code&gt; ImageStream we just created:&lt;/p&gt; &lt;p id="lQYmgDU"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c.png"&gt;&lt;img class=" aligncenter wp-image-525467 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c.png" alt="New OpenShift Application screen" width="815" height="817" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c.png 815w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c-300x300.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb214788d9c-768x770.png 768w" sizes="(max-width: 815px) 100vw, 815px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Select the ImageStream and click the &lt;strong&gt;Next&lt;/strong&gt; button:&lt;/p&gt; &lt;p id="VwlScId"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f.png"&gt;&lt;img class=" aligncenter wp-image-525477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f.png" alt="Build Configuration screen" width="815" height="817" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f.png 815w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f-300x300.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21626c12f-768x770.png 768w" sizes="(max-width: 815px) 100vw, 815px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Enter &lt;code&gt;myfirstrestapp&lt;/code&gt; in the &lt;strong&gt;Name&lt;/strong&gt; field, enter &lt;code&gt;https://github.com/GITHUB_USER/myfirstrestapp &lt;/code&gt;in the &lt;strong&gt;Git Repository URL&lt;/strong&gt; field, replace GITHUB_USER by your real GitHub username, and click the &lt;strong&gt;Next&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;In the Deployment Configuration &amp;#38; Scalability dialog box, click &lt;strong&gt;the Next&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;In the Service &amp;#38; Routing Settings dialog box, select the &lt;strong&gt;8778-tcp&lt;/strong&gt; port and click the&lt;strong&gt; Edit&lt;/strong&gt; button. Change the &lt;code&gt;8787&lt;/code&gt; value to &lt;code&gt;8080&lt;/code&gt;:&lt;/p&gt; &lt;p id="vOEXuoA"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2199545b3.png"&gt;&lt;img class=" aligncenter wp-image-525487 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2199545b3.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2199545b3.png" alt="Configure Service Ports dialog box" width="684" height="472" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2199545b3.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2199545b3-300x207.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click the&lt;strong&gt; OK&lt;/strong&gt; button then the&lt;strong&gt; Finish&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;The list of OpenShift resources created will be displayed in a dialog box:&lt;/p&gt; &lt;p id="VfSTWnF"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21b8375b5.png"&gt;&lt;img class=" aligncenter wp-image-525497 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21b8375b5.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21b8375b5.png" alt="List of created OpenShift resources" width="767" height="367" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21b8375b5.png 767w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21b8375b5-300x144.png 300w" sizes="(max-width: 767px) 100vw, 767px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click the&lt;strong&gt; OK&lt;/strong&gt; button to dismiss the dialog box and when asked to import the application code, click the&lt;strong&gt; Cancel&lt;/strong&gt; button because we already have the source code.&lt;/p&gt; &lt;p&gt;After the build is run (this may take several minutes as the Maven build downloads lots of dependencies), you should see a running pod:&lt;/p&gt; &lt;p id="jZjSksO"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0.png"&gt;&lt;img class=" aligncenter wp-image-525507 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0.png" alt="Running pod" width="1002" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb21e6e19e0-768x209.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Inner loop setup&lt;/h5&gt; &lt;p&gt;We are going to synchronize the local Eclipse project with the remote OpenShift pod. Each time a file is modified locally, the pod will be updated accordingly.&lt;/p&gt; &lt;p&gt;Select the running pod in the OpenShift Explorer, right-click the &lt;strong&gt;Server Adapter&lt;/strong&gt; menu item, and the following dialog will be displayed:&lt;/p&gt; &lt;p id="IErpVJE"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34.png"&gt;&lt;img class=" aligncenter wp-image-525517 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34.png" alt="Server Setting screen" width="886" height="752" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34.png 886w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34-300x255.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb221e38d34-768x652.png 768w" sizes="(max-width: 886px) 100vw, 886px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Click the &lt;strong&gt;OK&lt;/strong&gt; button. The initial synchronization will be started and the Servers view will be displayed:&lt;/p&gt; &lt;p id="cOmvtVG"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c.png"&gt;&lt;img class=" aligncenter wp-image-525527 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c.png" alt="Servers view" width="1002" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c-300x82.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb223d3e84c-768x209.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We’ve not set up the synchronization between our local Eclipse project and the remote OpenShift project. Each modification done locally will be reported on the remote OpenShift cluster.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s modify our local application code and see the changes applied almost instantly:&lt;/p&gt; &lt;p&gt;Edit the file &lt;code&gt;src/main/java/io/openshift/booster/service/Greeting.java&lt;/code&gt; in the &lt;code&gt;myfirstrestapp&lt;/code&gt; project and change the &lt;code&gt;FORMAT&lt;/code&gt;string value from &lt;code&gt;Hello, %s!&lt;/code&gt; to &lt;code&gt;Hello, Mr %s!&lt;/code&gt; and then save the file.&lt;/p&gt; &lt;p&gt;The file should be now like this:&lt;/p&gt; &lt;pre&gt;/* * Copyright 2016-2017 Red Hat, Inc, and individual contributors. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ package io.openshift.booster.service; // tag::snippet-greeting[] public class Greeting { public static final String FORMAT = "Hello, Mr %s!"; private final String content; public Greeting() { this.content = null; } public Greeting(String content) { this.content = content; } public String getContent() { return content; } } // end::snippet-greeting[]&lt;/pre&gt; &lt;p&gt;Then, in the &lt;code&gt;OpenShift explorer&lt;/code&gt; view, select the &lt;code&gt;myfirstrestapp&lt;/code&gt; deployment and select the &lt;code&gt;Show In -&amp;#62; Web Browser&lt;/code&gt; menu item and once the web browser is displayed, ckick the &lt;code&gt;Invoke&lt;/code&gt; button, you should see the following view:&lt;/p&gt; &lt;p id="FccFRnl"&gt;&lt;img class=" aligncenter wp-image-525537 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb22a7e29f6.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb22a7e29f6.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb22a7e29f6.png 1002w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb22a7e29f6-300x191.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb22a7e29f6-768x488.png 768w" sizes="(max-width: 1002px) 100vw, 1002px" /&gt;&lt;/p&gt; &lt;p&gt;You’ve just experienced the inner loop on your Spring Boot application: any change done locally is reported and testable almost immediately on your OpenShift cluster.&lt;/p&gt; &lt;p&gt;You can restart the deployment in debug mode and you’ll be able to remote debug your Spring Boot application. Amazing, no ?&lt;/p&gt; &lt;h3&gt;Server tools&lt;/h3&gt; &lt;h4&gt;Wildfly 14 Server Adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 14. It adds support for Java EE 8.&lt;/p&gt; &lt;h3&gt;Hibernate Tools&lt;/h3&gt; &lt;h4&gt;Runtime Provider Updates&lt;/h4&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.6.Final and Hibernate Tools version 5.3.6.Final.&lt;/p&gt; &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.17.Final and Hibernate Tools version 5.2.11.Final.&lt;/p&gt; &lt;p&gt;The Hibernate 5.1 runtime provider now incorporates Hibernate Core version 5.1.16.Final and Hibernate Tools version 5.1.10.Final.&lt;/p&gt; &lt;h3 id="fuse-tooling"&gt;Fuse Tooling&lt;/h3&gt; &lt;h4 id="rest-viewer-becoming-an-editor"&gt;REST Viewer becoming an editor&lt;/h4&gt; &lt;p&gt;Previously, there was a REST editor which was read-only. It is useful to have a great overview of already defined Camel REST DSL definitions. Now the editor and its related properties tab are also providing editing capabilities allowing to develop faster.&lt;/p&gt; &lt;p id="wfZRwgt"&gt;&lt;img class=" aligncenter wp-image-525547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2350c943a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2350c943a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2350c943a.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2350c943a-300x200.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb2350c943a-768x511.png 768w" sizes="(max-width: 800px) 100vw, 800px" /&gt;&lt;/p&gt; &lt;p&gt;You can now:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create and delete REST Configurations&lt;/li&gt; &lt;li&gt;Create and delete new REST Elements&lt;/li&gt; &lt;li&gt;Create and delete new REST Operations&lt;/li&gt; &lt;li&gt;Edit properties for a selected REST Element in the Properties view&lt;/li&gt; &lt;li&gt;Edit properties for a selected REST Operation in the Properties view&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In addition, we’ve improved the look and feel by fixing the scrolling capabilities of the REST Element and REST Operations lists.&lt;/p&gt; &lt;h3&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;h4&gt;Java Editor&lt;/h4&gt; &lt;h5&gt;Improved Breadcrumb for Dark theme&lt;/h5&gt; &lt;p&gt;The &lt;strong&gt;Breadcrumb&lt;/strong&gt; in the &lt;strong&gt;Java Editor&lt;/strong&gt; now uses a dark background in the Dark theme.&lt;/p&gt; &lt;p id="mViiFru"&gt;&lt;img class=" aligncenter wp-image-525577 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c4c4b693.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c4c4b693.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c4c4b693.png 480w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c4c4b693-300x131.png 300w" sizes="(max-width: 480px) 100vw, 480px" /&gt;&lt;/p&gt; &lt;p&gt;In the Light theme, the &lt;strong&gt;Breadcrumb&lt;/strong&gt; uses a flat look style instead of a gradient.&lt;/p&gt; &lt;h5&gt;Quick fix to create abstract methods&lt;/h5&gt; &lt;p&gt;The existing quick fix to create missing methods has been improved to create abstract method declarations. The option only appears when the target class is an abstract class.&lt;/p&gt; &lt;p id="ASJGAMj"&gt;&lt;img class=" aligncenter wp-image-525587 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c8249488.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c8249488.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c8249488.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4c8249488-300x159.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5&gt;Quick fix to convert to static import&lt;/h5&gt; &lt;p&gt;A new quick fix has been implemented that allows the user to convert static field accesses and static methods to use a static import. It’s also possible to replace all occurrences at the same time.&lt;/p&gt; &lt;p id="xdGhdOO"&gt;&lt;img class=" aligncenter wp-image-525597 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cab09139.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cab09139.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cab09139.png 442w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cab09139-300x119.png 300w" sizes="(max-width: 442px) 100vw, 442px" /&gt;&lt;/p&gt; &lt;h4&gt;Java Code Generation&lt;/h4&gt; &lt;h5&gt;Improved hashCode() and equals() generation&lt;/h5&gt; &lt;p&gt;A new option in the &lt;strong&gt;Source &amp;#62; Generate hashCode() and equals()… &lt;/strong&gt; tool allows you to create implementations using the Java 7 &lt;code&gt;Objects.equals&lt;/code&gt; and &lt;code&gt;Objects.hash&lt;/code&gt; methods.&lt;/p&gt; &lt;p id="TTAernb"&gt;&lt;img class=" aligncenter wp-image-525607 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cd8514dc.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cd8514dc.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cd8514dc.png 504w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cd8514dc-257x300.png 257w" sizes="(max-width: 504px) 100vw, 504px" /&gt;&lt;/p&gt; &lt;p&gt;The above setup generates the following code:&lt;/p&gt; &lt;p id="juQNxnS"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cf4389df.png"&gt;&lt;img class=" aligncenter wp-image-525617 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cf4389df.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cf4389df.png" alt="Java code generated" width="353" height="375" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cf4389df.png 353w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4cf4389df-282x300.png 282w" sizes="(max-width: 353px) 100vw, 353px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Additionally, arrays are handled more cleverly. The generation prefers the &lt;code&gt;Arrays.deepHashCode&lt;/code&gt; and &lt;code&gt;Arrays.deepEquals&lt;/code&gt; methods when dealing with &lt;code&gt;Object[]&lt;/code&gt;, &lt;code&gt;Serializable[]&lt;/code&gt;, and &lt;code&gt;Cloneable[]&lt;/code&gt; or any type variables extending these types.&lt;/p&gt; &lt;h4&gt;Java Views and Dialog Boxes&lt;/h4&gt; &lt;h5&gt;Quick Fix for JRE Compiler Compliance Problem Marker&lt;/h5&gt; &lt;p&gt;A new quick fix is provided on the &lt;strong&gt;JRE Compiler Compliance&lt;/strong&gt; problem marker, which is created when the compiler compliance does not match the JRE being used. This quick fix provides the option of opening the &lt;strong&gt;Compiler Compliance&lt;/strong&gt; page of the project to fix the issue.&lt;/p&gt; &lt;p id="rTNOZzT"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d2a28b2b.png"&gt;&lt;img class=" aligncenter wp-image-525627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d2a28b2b.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d2a28b2b.png" alt="Quick Fix screen" width="587" height="468" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d2a28b2b.png 587w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d2a28b2b-300x239.png 300w" sizes="(max-width: 587px) 100vw, 587px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Selecting this option opens the &lt;strong&gt;Compiler Compliance&lt;/strong&gt; property page for the specified project as shown below.&lt;/p&gt; &lt;p id="XBNhQuV"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d45a81fd.png"&gt;&lt;img class=" aligncenter wp-image-525637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d45a81fd.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d45a81fd.png" alt="Compiler Compliance property page" width="534" height="569" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d45a81fd.png 534w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d45a81fd-282x300.png 282w" sizes="(max-width: 534px) 100vw, 534px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Open Type dialog box always shows the full path now&lt;/h5&gt; &lt;p&gt;The &lt;strong&gt;Open Type&lt;/strong&gt; dialog box now always shows the full path of all the matching items.&lt;/p&gt; &lt;p id="REafmFq"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d6d96f3e.png"&gt;&lt;img class=" aligncenter wp-image-525647 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d6d96f3e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d6d96f3e.png" alt="Open Type dialog box" width="597" height="508" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d6d96f3e.png 597w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d6d96f3e-300x255.png 300w" sizes="(max-width: 597px) 100vw, 597px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4&gt;Java Formatter&lt;/h4&gt; &lt;h5&gt;Keep simple loops in one line&lt;/h5&gt; &lt;p&gt;New formatter settings have been added that make it possible to keep the bodies of simple loops (without braces) in the same line as their headers, similar to the previously existing setting for simple &lt;code&gt;if&lt;/code&gt; statements. Different kind of loops (&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do while&lt;/code&gt;) can be controlled independently.&lt;/p&gt; &lt;p&gt;The settings can be found in the profile editor under &lt;strong&gt;New Lines &amp;#62; In control statements &amp;#62; Simple Loops&lt;/strong&gt;.&lt;/p&gt; &lt;p id="iLrrqrX"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779.png"&gt;&lt;img class=" aligncenter wp-image-525657 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779.png" alt="Screen for selecting formatter settings" width="446" height="445" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779.png 446w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4d9c29779-300x300.png 300w" sizes="(max-width: 446px) 100vw, 446px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There’s also a new setting to control how these loops should be handled if they exceed the maximum line width. It’s located under &lt;strong&gt;Line Wrapping &amp;#62; Wrapping settings &amp;#62; Statements &amp;#62; Compact loops (&amp;#8216;for&amp;#8217;, &amp;#8216;while&amp;#8217;, &amp;#8216;do while&amp;#8217;)&lt;/strong&gt;.&lt;/p&gt; &lt;p id="gKPtXcV"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4db6c2592.png"&gt;&lt;img class=" aligncenter wp-image-525667 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4db6c2592.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4db6c2592.png" alt="Screen for controlling how loops are handled if they exceed the maximum line width" width="446" height="327" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4db6c2592.png 446w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4db6c2592-300x220.png 300w" sizes="(max-width: 446px) 100vw, 446px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Align items in columns&lt;/h5&gt; &lt;p&gt;A feature previously known as &lt;strong&gt;align fields in columns&lt;/strong&gt; has been expanded and can now be used for &lt;strong&gt;variable declarations&lt;/strong&gt; and &lt;strong&gt;assignment statements&lt;/strong&gt; as well.&lt;/p&gt; &lt;p&gt;An option has also been added to always &lt;strong&gt;align with spaces&lt;/strong&gt;, even if tabs are used for general indentation. This is very similar to the &lt;strong&gt;Use spaces to indent wrapped lines&lt;/strong&gt; option and is useful to make the code look good in editors with differing tab widths.&lt;/p&gt; &lt;p&gt;All the settings related to aligning are now in the new preferences subsection: &lt;strong&gt;Indentation &amp;#62; Align items in columns&lt;/strong&gt;.&lt;/p&gt; &lt;p id="Kaaqcof"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489.png"&gt;&lt;img class=" aligncenter wp-image-525677 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489.png" alt="New preferences subsection" width="459" height="459" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489.png 459w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4dda1a489-300x300.png 300w" sizes="(max-width: 459px) 100vw, 459px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h4&gt;Debug&lt;/h4&gt; &lt;h5&gt;Timeout for the result of step operations&lt;/h5&gt; &lt;p&gt;Observing the result of step operations may slow down execution, which may make trying to observe results unusable if a step takes long already. Therefore, a timeout (default is 7000 ms) has been introduced after which the observation mechanism is disabled until the end of the step operation.&lt;/p&gt; &lt;p id="yzzXebd"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e0757d71.png"&gt;&lt;img class=" aligncenter wp-image-525687 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e0757d71.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e0757d71.png" alt="Timeout for step operations" width="520" height="121" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e0757d71.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e0757d71-300x70.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The timeout can be configured in &lt;strong&gt;Preferences &amp;#62; Java &amp;#62; Debug &amp;#62; Don’t show if step operation takes longer than (ms)&lt;/strong&gt;.&lt;/p&gt; &lt;h5&gt;Option to hide running threads in Debug view&lt;/h5&gt; &lt;p&gt;A new option has been introduced in the &lt;strong&gt;Debug&lt;/strong&gt; view to show or hide running threads.&lt;/p&gt; &lt;p&gt;Hiding running threads can be useful when debugging a heavily multithreaded application when it is difficult to find threads stopped at breakpoints among hundreds or thousands of running threads.&lt;/p&gt; &lt;p id="mRlkosH"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a.png"&gt;&lt;img class=" aligncenter wp-image-525697 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a-1024x412.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a.png" alt="Hiding running threads in Debug view" width="1336" height="538" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a.png 1336w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a-300x121.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a-768x309.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e34ddb5a-1024x412.png 1024w" sizes="(max-width: 1336px) 100vw, 1336px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Show Command Line button in Launch Configuration&lt;/h5&gt; &lt;p&gt;A new &lt;strong&gt;Show Command Line&lt;/strong&gt; button has been added in the &lt;strong&gt;Java Launch Configuration&lt;/strong&gt; dialog box.&lt;/p&gt; &lt;p id="GEAgIeH"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e593f9d8.png"&gt;&lt;img class=" aligncenter wp-image-525707 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e593f9d8.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e593f9d8.png" alt="Java Launch Configuration dialog box" width="508" height="338" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e593f9d8.png 508w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e593f9d8-300x200.png 300w" sizes="(max-width: 508px) 100vw, 508px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clicking the button will open a dialog box to show the command line used for launching the application.&lt;/p&gt; &lt;p id="WbMfsTs"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e73e21d4.png"&gt;&lt;img class=" aligncenter wp-image-525717 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e73e21d4.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e73e21d4.png" alt="Command line dialog box" width="493" height="312" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e73e21d4.png 493w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4e73e21d4-300x190.png 300w" sizes="(max-width: 493px) 100vw, 493px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h5&gt;Option to disable thread name changes in Debug view&lt;/h5&gt; &lt;p&gt;Thread name changes in the JVM being debugged are reflected in the &lt;strong&gt;Debug&lt;/strong&gt; view. A VM option can now be used to disable this behavior in case the JVM communication necessary for the name updates is not desired.&lt;/p&gt; &lt;p&gt;The functionality can be disabled by specifying the following VM option:&lt;/p&gt; &lt;pre&gt;-Dorg.eclipse.jdt.internal.debug.core.model.ThreadNameChangeListener.disable=true&lt;/pre&gt; &lt;h5&gt;Support for long classpath/modulepath&lt;/h5&gt; &lt;p&gt;The classpath and/or modulepath are now shortened if they are longer than current operating system limits.&lt;/p&gt; &lt;p&gt;If a temporary JAR is needed to shorten the classpath (Java 8 and previous versions), a dialog box is shown asking for confirmation.&lt;/p&gt; &lt;p id="InWURUt"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a.png"&gt;&lt;img class=" aligncenter wp-image-525727 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a-1024x283.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a.png" alt="Dialog box confirming the shortening of the classpath." width="1388" height="384" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a.png 1388w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a-300x83.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a-768x212.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ecd8d76a-1024x283.png 1024w" sizes="(max-width: 1388px) 100vw, 1388px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The option &lt;strong&gt;Use temporary jar to specify classpath (to avoid classpath length limitations)&lt;/strong&gt; is available in the &lt;strong&gt;Classpath&lt;/strong&gt; tab of the &lt;strong&gt;Run/Debug Configuration&lt;/strong&gt; dialog box.&lt;/p&gt; &lt;p id="UffYIGt"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f.png"&gt;&lt;img class=" aligncenter wp-image-525737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f-1024x622.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f.png" alt="Run/Debug Configuration dialog box" width="2372" height="1440" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f.png 2372w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f-768x466.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bbb4ee94e73f-1024x622.png 1024w" sizes="(max-width: 2372px) 100vw, 2372px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;And more…&lt;/h3&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="http://tools.stage.jboss.org/documentation/whatsnew/jbosstools/4.9.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;Now that JBoss Tools 4.9.0 and Red Hat Developer Studio 12.9 are out, we are already working on the next release for Eclipse 2018-12.&lt;/p&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;linkname=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2Fdevstudio-12-9-jboss-tools-4-9-eclipse-2018-09%2F&amp;#38;title=Announcing%20Red%20Hat%20Developer%20Studio%2012.9.0.GA%20and%20JBoss%20Tools%204.9.0.Final%20for%20Eclipse%202018-09" data-a2a-url="https://developers.redhat.com/blog/2018/10/09/devstudio-12-9-jboss-tools-4-9-eclipse-2018-09/" data-a2a-title="Announcing Red Hat Developer Studio 12.9.0.GA and JBoss Tools 4.9.0.Final for Eclipse 2018-09"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/09/devstudio-12-9-jboss-tools-4-9-eclipse-2018-09/"&gt;Announcing Red Hat Developer Studio 12.9.0.GA and JBoss Tools 4.9.0.Final for Eclipse 2018-09&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BcCnSoEO4nw" height="1" width="1" alt=""/&gt;</content><summary>Attention desktop IDE users: Red Hat Developer Studio 12.9 and the community edition, JBoss Tools 4.9.0 for Eclipse Photon, are now available. You can download the Developer Studio bundled installer, which installs Eclipse 4.9 with all of the JBoss Tools already configured. Or, if you have an existing Eclipse 4.9 (2018-09) installation, you can download the JBoss Tools package. This article highli...</summary><dc:creator>Jeff Maury</dc:creator><dc:date>2018-10-09T14:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/09/devstudio-12-9-jboss-tools-4-9-eclipse-2018-09/</feedburner:origLink></entry><entry><title>Integrating third-party identity providers with Red Hat 3scale API Management</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vdw5-h2cE1k/" /><category term="3scale" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="identity broker" scheme="searchisko:content:tags" /><category term="identity provider" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="microsoft" scheme="searchisko:content:tags" /><category term="oauth" scheme="searchisko:content:tags" /><category term="OIDC" scheme="searchisko:content:tags" /><category term="openid connect" scheme="searchisko:content:tags" /><category term="Red Hat 3scale API Management" scheme="searchisko:content:tags" /><category term="Red Hat SSO" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><author><name>Luca Ferrari</name></author><id>searchisko:content:id:jbossorg_blog-integrating_third_party_identity_providers_with_red_hat_3scale_api_management</id><updated>2018-10-09T11:00:04Z</updated><published>2018-10-09T11:00:04Z</published><content type="html">&lt;p&gt;This post describes how to configure OpenID Connect (OIDC) authentication using an external Identity Provider (IdP). With the new release of &lt;a href="https://developers.redhat.com/products/3scale/overview/"&gt;Red Hat 3scale API Management&lt;/a&gt;, version 2.3, it is possible to use any OIDC-compliant IdP during the API authentication phase. This is a very important new feature because it makes it possible to integrate any IdP already present in your environment—without having to use an Identity Broker—thus reducing overall complexity.&lt;/p&gt; &lt;p&gt;&lt;span id="more-522217"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;API authentication before version 2.3&lt;/h2&gt; &lt;p&gt;Let’s recap what was possible before this release in terms of API authentication.&lt;/p&gt; &lt;p&gt;Up to and including version 2.2, the typical configuration scenario for setting up OIDC authentication would require three components:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Red Hat 3scale API Management (manager + gateway)&lt;/li&gt; &lt;li&gt;Red Hat Single Sign-On&lt;/li&gt; &lt;li&gt;Customer IdP&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;After the configuration was completed (you can find more details &lt;a href="https://developers.redhat.com/blog/2017/10/26/3scale-api-management-simplifies-openid-connect-integration/"&gt;here&lt;/a&gt;), the end-user application would first authenticate the end user with Red Hat Single Sign-On. This presented the interface for the Customer IdP and there, the end user would authenticate. There was also a token exchange between the Customer IdP and Red Hat Single Sign-On and this would return a valid access token to the application. Then, by attaching the token to the headers and forwarding the request towards the 3scale API Management gateway, the application would use this token to get access to the API backend protected by 3scale API Management. The gateway would validate the token by performing sanity checks on the access token, which needed to be a &lt;b&gt;J&lt;/b&gt;SON &lt;b&gt;W&lt;/b&gt;eb &lt;b&gt;T&lt;/b&gt;oken (JWT). (You can find more details on OIDC and OAuth &lt;a href="https://nordicapis.com/api-security-oauth-openid-connect-depth"&gt;here&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;The three main checks performed to actually authenticate the call were:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Verifying the token was signed with the public key of the IdP (more details about the process are available &lt;a href="http://blog.differentpla.net/blog/2015/04/19/jwt-rs256-erlang"&gt;here&lt;/a&gt;)&lt;/li&gt; &lt;li&gt;Checking that the Client ID inside the token corresponded to the one in 3scale API Management&lt;/li&gt; &lt;li&gt;Verifying that the TTL (Time To Live) of the token had not expired&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;These checks were based on the minimum requirements for complying with the OIDC standard.&lt;/p&gt; &lt;p&gt;As of version 2.3, as long as the Customer IdP complies with the OIDC specifications, the flow described above will be simplified by removing the need for Red Hat Single Sign-On, as described below.&lt;/p&gt; &lt;h2&gt;OIDC compliance&lt;/h2&gt; &lt;p&gt;What is OIDC compliance? You can find more info &lt;a href="https://openid.net/certification/"&gt;on the OpenID certification page&lt;/a&gt;. As you can see, Red Hat is there with Keycloak. This list of certified implementations is important because there are many IdPs out there that implement the basics to support an OAuth2.0 authentication scenario, but they are not compliant with the stricter OIDC standard. (It&amp;#8217;s important to know that before starting any integration effort.)&lt;/p&gt; &lt;p&gt;Let’s take two major providers mentioned in that list and see how 3scale API Management can work with them. In the following scenarios, I will use:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;My 3scale SaaS account for the API manager component&lt;/li&gt; &lt;li&gt;A locally running API gateway image in Docker format&lt;/li&gt; &lt;li&gt;A cloud-based third-party IdP&lt;/li&gt; &lt;li&gt;An API backend running in the cloud&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;For the last item, I will be using a service called &lt;a href="https://randomuser.me/"&gt;RandomUser&lt;/a&gt; that generates random user data, which is useful when you are populating your application with dummy users.&lt;/p&gt; &lt;h2&gt;Integrating with Oracle IDCS&lt;/h2&gt; &lt;p&gt;Oracle Identity Cloud Service is an online IdP that supports OAuth2.0, OIDC, and SAML 2.0.&lt;/p&gt; &lt;p&gt;I will not get into the details of the features of this IdP or how to sign up for an Oracle Cloud account, but be aware that as of today, you can sign up for a free trial.&lt;/p&gt; &lt;p&gt;As a starting point, I will use an &lt;a href="http://www.ateam-oracle.com/using-openid-connect-to-delegate-authentication-to-oracle-identity-cloud-service/"&gt;article from an Oracle expert&lt;/a&gt; for configuring the application.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s start with the configuration of Oracle IDCS by creating a new application.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14.png"&gt;&lt;img class=" aligncenter wp-image-522257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14-1024x457.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14-1024x457.png" alt="Oracle IDCS new application screen" width="640" height="286" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14-1024x457.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14-300x134.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-51-14-768x343.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Notice I configured the client as confidential. Remember to activate the client before using it.&lt;/p&gt; &lt;p&gt;Then, configure the resources the client is allowed to access:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39.png"&gt;&lt;img class=" aligncenter wp-image-522277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39-1024x490.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39-1024x490.png" alt="Audience section of the new application" width="640" height="306" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39-1024x490.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39-300x143.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-11-52-39-768x367.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In particular, notice the Primary Audience configuration, which contains the value of the Client ID (I will explain the reason later).&lt;/p&gt; &lt;p&gt;Assign a user to the application:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-02-08.png"&gt;&lt;img class=" aligncenter wp-image-522287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-02-08.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-02-08.png" alt="Users assigned to the application" width="688" height="348" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-02-08.png 688w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-02-08-300x152.png 300w" sizes="(max-width: 688px) 100vw, 688px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Last, don’t forget to make the endpoint to access the public key of Oracle IDCS publicly accessible.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25.png"&gt;&lt;img class=" aligncenter wp-image-522297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25-1024x319.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25-1024x319.png" alt="Public key visibility" width="640" height="199" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25-1024x319.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25-300x93.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25-768x239.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-07-25.png 1552w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Let’s now configure 3scale API Management. Start with the configuration of the API authentication:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28.png"&gt;&lt;img class=" aligncenter wp-image-522307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28-1024x572.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28-1024x572.png" alt="3scale API Management authentication settings" width="640" height="358" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28-1024x572.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28-768x429.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-26-18-31-28.png 1202w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then, specify the endpoint for the Oracle IDCS IdP as the OpenID Connect Issuer (as a reference, this should be the Discovery Endpoint minus the &lt;i&gt;.well-known/openid-configuration&lt;/i&gt; part).&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02.png"&gt;&lt;img class=" aligncenter wp-image-522317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02-1024x611.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02-1024x611.png" alt="3scale API Management IdP settings" width="640" height="382" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02-1024x611.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02-300x179.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02-768x458.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-25-02.png 1486w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;(When you update the staging configuration, ignore the validation error because this is related to the functionality for &lt;a href="https://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration"&gt;dynamic client registration&lt;/a&gt;,  which is available only for Red Hat Single Sign-On). I also had to add a header policy to the configuration, because the backend service I picked doesn’t seem to accept long headers, such as ones containing an access token.&lt;/p&gt; &lt;p&gt;Last, create the application on 3scale API Management:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54.png"&gt;&lt;img class=" aligncenter wp-image-522327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54-1024x619.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54-1024x619.png" alt="new application in 3scale API Management" width="640" height="387" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54-1024x619.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54-300x181.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54-768x464.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-32-54.png 1244w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Let’s now launch the 3scale API Management gateway on my machine:&lt;/p&gt; &lt;pre&gt;docker run --name apicast --rm -p 8082:8080 -e THREESCALE_PORTAL_ENDPOINT=https://*access_token*@lmf-admin.3scale.net -e APICAST_RESPONSE_CODES=true -e APICAST_SERVICES_LIST=2555417760770 -e APICAST_CONFIGURATION_CACHE=300 -e APICAST_LOG_LEVEL=info quay.io/3scale/apicast:master&lt;/pre&gt; &lt;p&gt;As you can see, I’m filtering the services on the gateway (to make troubleshooting easier) and I’m using the latest version of the community gateway, since this feature is yet to be released.&lt;/p&gt; &lt;p&gt;Let’s now test the complete integration with Postman:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06.png"&gt;&lt;img class=" aligncenter wp-image-522337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06-1024x524.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06-1024x524.png" alt="OIDC authentication with Postman" width="640" height="328" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06-1024x524.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06-300x154.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06-768x393.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-12-44-06.png 1452w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once you authenticate with your end users, you will receive two tokens: the access token and the ID token. You can decode the content of the tokens &lt;a href="https://jwt.io/"&gt;here&lt;/a&gt;. As you can see by comparing the two tokens, the &lt;i&gt;aud&lt;/i&gt; claim is different in content. In the case of the ID token, it contains the value of the client ID as well. Audience or &lt;i&gt;aud&lt;/i&gt; generally indicates who can consume the service, and according to the official OIDC specs:&lt;/p&gt; &lt;p&gt;&lt;i&gt;aud&lt;/i&gt;&lt;br /&gt; &lt;i&gt;    REQUIRED. Audience(s) that this ID Token is intended for. It MUST contain &lt;/i&gt;&lt;i&gt;the OAuth 2.0 client_id of the Relying Party as an audience value. It MAY also &lt;/i&gt;&lt;i&gt;contain identifiers for other audiences.&lt;/i&gt;&lt;/p&gt; &lt;p&gt;We are going to use the ID token and add that to the headers in the request.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02.png"&gt;&lt;img class=" aligncenter wp-image-522347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02-1024x595.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02-1024x595.png" alt="Response from Postman" width="640" height="372" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02-1024x595.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02-300x174.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02-768x446.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-13-06-02.png 1353w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It works!&lt;/p&gt; &lt;h2&gt;Integrating with Microsoft Azure Active Directory&lt;/h2&gt; &lt;p&gt;I hope you are still with me. Let’s move now to the second integration. (How to set up an Azure account and information about the full feature list of the product are out of the scope of this tutorial.)&lt;/p&gt; &lt;p&gt;We will start with the creation of the application on the Microsoft side. I will &lt;a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"&gt;use this Microsoft page as the starting point&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here are some notes before continuing with this effort:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I will be using v2 of the endpoints for Active Directory Federation Services (ADFS) since they are OIDC-compliant.&lt;/li&gt; &lt;li&gt;You will need the tenant ID, which you can find by navigating to the Properties pane of the Azure Active Directory section, inside the Azure Portal.&lt;/li&gt; &lt;li&gt;I will configure the application on the Microsoft Application Console.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here is my application created on the Azure Portal:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28.png"&gt;&lt;img class=" aligncenter wp-image-522357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28-1024x807.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28-1024x807.png" alt="new application in the Microsoft portal" width="640" height="504" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28-1024x807.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28-300x236.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28-768x605.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-15-28.png 1141w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I will now modify the service configuration in 3scale API Management:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22.png"&gt;&lt;img class=" aligncenter wp-image-522367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22-1024x393.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22-1024x393.png" alt="3scale API Management IdP settings" width="640" height="246" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22-1024x393.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22-300x115.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22-768x295.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-19-22.png 1469w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And create a new application:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26.png"&gt;&lt;img class=" aligncenter wp-image-522387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26.png" alt="new application in 3scale API Management" width="958" height="563" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26.png 958w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26-300x176.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-23-26-768x451.png 768w" sizes="(max-width: 958px) 100vw, 958px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once again, we will be using Postman to obtain the access token.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10.png"&gt;&lt;img class=" aligncenter wp-image-522397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10-1024x592.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10-1024x592.png" alt="OIDC authentication with Postman" width="640" height="370" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10-1024x592.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10-300x173.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10-768x444.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-26-10.png 1350w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And now here is the actual request (once again using the ID token for the same reasons explained above).&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-522407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13-1024x550.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13-300x161.png" alt="response from Postman" width="300" height="161" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13-300x161.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13-768x412.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13-1024x550.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Screenshot-from-2018-09-27-15-30-13.png 1436w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;p&gt;Great! Thank you for staying with me through all the technical details related to OIDC.&lt;/p&gt; &lt;p&gt;Stay tuned for more blog posts about API authentication and authorization!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;linkname=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F09%2F3scale-3rd-party-idp-oidc%2F&amp;#38;title=Integrating%20third-party%20identity%20providers%20with%20Red%20Hat%203scale%20API%20Management" data-a2a-url="https://developers.redhat.com/blog/2018/10/09/3scale-3rd-party-idp-oidc/" data-a2a-title="Integrating third-party identity providers with Red Hat 3scale API Management"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/09/3scale-3rd-party-idp-oidc/"&gt;Integrating third-party identity providers with Red Hat 3scale API Management&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vdw5-h2cE1k" height="1" width="1" alt=""/&gt;</content><summary>This post describes how to configure OpenID Connect (OIDC) authentication using an external Identity Provider (IdP). With the new release of Red Hat 3scale API Management, version 2.3, it is possible to use any OIDC-compliant IdP during the API authentication phase. This is a very important new feature because it makes it possible to integrate any IdP already present in your environment—without ha...</summary><dc:creator>Luca Ferrari</dc:creator><dc:date>2018-10-09T11:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/09/3scale-3rd-party-idp-oidc/</feedburner:origLink></entry><entry><title>Let's embed forms ... rendered by KIE Server</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vUhSfprscBo/lets-embed-forms-rendered-by-kie-server.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><category term="jbpm.org" scheme="searchisko:content:tags" /><category term="jbpm_embedded_forms" scheme="searchisko:content:tags" /><category term="jbpm_forms" scheme="searchisko:content:tags" /><category term="jbpm_forms_js" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-let_s_embed_forms_rendered_by_kie_server</id><updated>2018-10-09T10:19:32Z</updated><published>2018-10-09T10:19:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;jBPM comes with rather sophisticated form modeller that allows to graphically build forms for processes and tasks. These forms can then be used to interact with process engine to start new instances or complete user tasks.&lt;br /&gt;&lt;br /&gt;One of the biggest advantages of using forms built in workbench is that they share the same life cycle as your business assets (processes and user tasks). By that they are versioned exactly the same way - so if you have another version of a process that requires more information to start you simply create new version of the project and make changes to both process definition and form. Once deployed you can start different versions of the process using dedicated forms.&lt;br /&gt;&lt;br /&gt;Although to be able to take advantage of these forms users have to be logged into workbench as the only way to render the content is ... through workbench itself. These days are now over ... KIE Server provides pluggable renderers for forms created in workbench. That means you can solely interact with kie server to perform all the needed operations. So what does this brings:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;renders process forms - used to start new instances&lt;/li&gt;&lt;li&gt;renders case forms - used to start new case instances - includes both data and role assignments&lt;/li&gt;&lt;li&gt;renders user task forms - used to interact with user tasks - includes life cycle operations&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;Worth noting is that rendered forms are fully operational, meaning they come with buttons to perform all the operations that are based on the context - e.g. if user task is in in progress state there are buttons to stop, release, save and complete.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here are few screenshots on how the forms look like, these are taken from the sample projects that come out of the box with jBPM distribution&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-VgIJ41KDxA8/W7x9wSPdbfI/AAAAAAAABhA/ROyUkkQ_36AdfGJyqK4shn9H8u57XMl9ACLcBGAs/s1600/Screen%2BShot%2B2018-10-09%2Bat%2B12.06.21.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="313" data-original-width="1600" height="124" src="https://3.bp.blogspot.com/-VgIJ41KDxA8/W7x9wSPdbfI/AAAAAAAABhA/ROyUkkQ_36AdfGJyqK4shn9H8u57XMl9ACLcBGAs/s640/Screen%2BShot%2B2018-10-09%2Bat%2B12.06.21.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Evaluation start process form&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-wPkuthsrqmc/W7x93azqK0I/AAAAAAAABhI/6_I33vkdsLc-jV1hnUB4asp0MR8y17_EQCLcBGAs/s1600/Screen%2BShot%2B2018-10-09%2Bat%2B12.06.39.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="773" data-original-width="1600" height="308" src="https://4.bp.blogspot.com/-wPkuthsrqmc/W7x93azqK0I/AAAAAAAABhI/6_I33vkdsLc-jV1hnUB4asp0MR8y17_EQCLcBGAs/s640/Screen%2BShot%2B2018-10-09%2Bat%2B12.06.39.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Mortgage start process form&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-LlzANjRDpdU/W7x9gh-ohcI/AAAAAAAABg8/u6I4GMugxKs1YujImA1IPmpRq_n39pJywCLcBGAs/s1600/Screen%2BShot%2B2018-10-09%2Bat%2B12.05.34.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="478" data-original-width="1600" height="190" src="https://3.bp.blogspot.com/-LlzANjRDpdU/W7x9gh-ohcI/AAAAAAAABg8/u6I4GMugxKs1YujImA1IPmpRq_n39pJywCLcBGAs/s640/Screen%2BShot%2B2018-10-09%2Bat%2B12.05.34.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;IT Orders start case form&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div&gt;As it was mentioned, form renderers are pluggable and out of the box there are two implementations&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;based on &lt;b&gt;PatternFly&lt;/b&gt; - this is the default renderer that keeps the look and feel consistent with workbench&lt;/li&gt;&lt;li&gt;based on &lt;b&gt;Bootstrap&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Renderers can be switched per each form rendering request by simply appending query parameter&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: Courier New, Courier, monospace;"&gt;?renderer=patternfly&lt;/span&gt; or &lt;span style="font-family: Courier New, Courier, monospace;"&gt;?renderer=boostrap&lt;/span&gt; if not given patternfly is the default one.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Here are few examples of the REST endpoints that illustrate how to get these forms rendered&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class="brush:java"&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/processes/evaluation/content&lt;br /&gt;http://localhost:8080/kie-server/services/rest/server/containers/evaluation/forms/tasks/1/content&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;http://localhost:8080/kie-server/services/rest/server/containers/mortgage-process/forms/processes/Mortgage_Process.MortgageApprovalProcess/content&lt;br /&gt;http://localhost:8080/kie-server/services/rest/server/containers/mortgage-process/forms/tasks/2/content&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;http://localhost:8080/kie-server/services/rest/server/containers/itorders/forms/cases/itorders.orderhardware/content&lt;br /&gt;http://localhost:8080/kie-server/services/rest/server/containers/itorders/forms/tasks/3/content&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;Note that containers are given as alias so that brings in additional benefits when working with forms and multiple project versions.&lt;br /&gt;&lt;br /&gt;And at the end few short screen casts showing this feature in action&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Evaluation process&lt;/h3&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/uExQYRwBI-0" width="560"&gt;&lt;/iframe&gt; &lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Mortgage process&lt;/h3&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/1dWWer-0W2s" width="560"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;IT Orders case&lt;/h3&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/fzimhalDVl4" width="560"&gt;&lt;/iframe&gt; &lt;br /&gt;More technical information will be provided in the next article as this one is just a quick preview of what's coming. Hope you like it and don't forget to provide feedback!&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vUhSfprscBo" height="1" width="1" alt=""/&gt;</content><summary>jBPM comes with rather sophisticated form modeller that allows to graphically build forms for processes and tasks. These forms can then be used to interact with process engine to start new instances or complete user tasks. One of the biggest advantages of using forms built in workbench is that they share the same life cycle as your business assets (processes and user tasks). By that they are versi...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-10-09T10:19:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/10/lets-embed-forms-rendered-by-kie-server.html</feedburner:origLink></entry><entry><title>Configuring NGINX for OAuth/OpenID Connect SSO with Keycloak/Red Hat SSO</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/t26ZEa20cr0/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="nginx" scheme="searchisko:content:tags" /><category term="oauth" scheme="searchisko:content:tags" /><category term="OIDC" scheme="searchisko:content:tags" /><category term="Red Hat SSO" scheme="searchisko:content:tags" /><category term="reverse-proxy server" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><category term="sso" scheme="searchisko:content:tags" /><author><name>Siddhartha De</name></author><id>searchisko:content:id:jbossorg_blog-configuring_nginx_for_oauth_openid_connect_sso_with_keycloak_red_hat_sso</id><updated>2018-10-08T17:22:07Z</updated><published>2018-10-08T17:22:07Z</published><content type="html">&lt;p&gt;In this article I cover configuring NGINX for OAuth-based Single Sign-On (SSO) using Keycloak/Red Hat SSO. This allows the use of OpenID Connect (OIDC) for federated identity. This configuration is helpful when NGINX is acting as a reverse-proxy server for a backend application server, for example, Tomcat or JBoss, where the authentication is to be performed by the web server.&lt;/p&gt; &lt;p&gt;In this setup, Keycloak will act as an authorization server in OAuth-based SSO and NGINX will be the relaying party.  We will be using &lt;a href="https://github.com/zmartzone/lua-resty-openidc"&gt;lua-resty-openidc&lt;/a&gt;, which is a library for NGINX implementing the OpenID Connect relying party (RP) and/or the OAuth 2.0 resource server (RS) functionality.&lt;span id="more-521247"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a diagram of an An OIDC-based authentication flow:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/basic-oidc.jpg"&gt;&lt;img class="aligncenter wp-image-438042 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/basic-oidc.jpg" alt="OAuth-based authentication flow" width="640" height="39" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In order to install &lt;code&gt;lua-resty-oidc&lt;/code&gt;&lt;b&gt;, &lt;/b&gt;you need to install several other dependent modules on the NGINX server:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://www.lua.org/download.html"&gt;Lua&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;lua-nginx-module&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.kyne.com.au/~mark/software/lua-cjson.php"&gt;lua-cjson.php&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Installation instructions&lt;/b&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;First, we create a directory for keeping all the required packages and then we change the current working directory to the newly created directory. Here, I will execute all the commands as the &lt;code&gt;root&lt;/code&gt; user; it is possible to execute them as a non-root user too, but some commands, for example, &lt;code&gt;yum&lt;/code&gt; will not work for a non-root user and require additional steps to perform. &lt;pre&gt;# mkdir /tmp/nginx-lua # cd /tmp/nginx-lua&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Now, download the packages that are required:&lt;br /&gt; a. Download NGINX version 1.13.6 and extract it:&lt;/p&gt; &lt;pre&gt;# wget http://nginx.org/download/nginx-1.13.6.tar.gz # tar -zxvf nginx-1.13.6.tar.gz&lt;/pre&gt; &lt;p&gt;b. Download OpenSSL and extract it:&lt;/p&gt; &lt;pre&gt;# wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2g.tar.gz # wget OpenSSL_1_1_0g.tar.gz&lt;/pre&gt; &lt;p&gt;c. Download &lt;code&gt;lua-nginx-module&lt;/code&gt; and extract it:&lt;/p&gt; &lt;pre&gt;# wget https://github.com/openresty/lua-nginx-module/archive/v0.10.13.tar.gz # tar -zxvf v0.10.13.tar.gz&lt;/pre&gt; &lt;p&gt;d. Download &lt;code&gt;ngx_devel_kit&lt;/code&gt; and extract it:&lt;/p&gt; &lt;pre&gt;# wget https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz # tar -zxvf v0.3.0.tar.gz&lt;/pre&gt; &lt;p&gt;e. Download Lua and extract it:&lt;/p&gt; &lt;pre&gt;# wget http://www.lua.org/ftp/lua-5.1.5.tar.gz # tar -zxvf lua-5.1.5.tar.gz&lt;/pre&gt; &lt;p&gt;f. Clone &lt;code&gt;luaffib&lt;/code&gt; and install it using &lt;code&gt;luarocks&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# git clone https://github.com/facebookarchive/luaffifb # cd luaffifb # luarocks make&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Install the dependencies and packages required for &lt;code&gt;lua-resty-oidc&lt;/code&gt;:&lt;br /&gt; a. We will first install Lua, so change the current working directory to &lt;code&gt;lua-5.1.5&lt;/code&gt; and then execute the installation:&lt;/p&gt; &lt;pre&gt;# cd lua-5.1.5 # make linux test # make install # cd ..&lt;/pre&gt; &lt;p&gt;b. Install &lt;code&gt;luarocks&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# yum install luarocks&lt;/pre&gt; &lt;p&gt;c. Install all the Lua modules using &lt;code&gt;luarocks&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# luarocks install lua-cjson # luarocks install lua-resty-openidc&lt;/pre&gt; &lt;p&gt;d. After the Lua installation, export the PATH for &lt;code&gt;LUA_LIB&lt;/code&gt; and &lt;code&gt;LUA_INC&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# export LUA_LIB=/usr/local/lib/lua/5.1/ # export LUA_INC=/usr/local/include/&lt;/pre&gt; &lt;p&gt;e. Now, we need to install the development tools, for example, gcc, c++, etc.&lt;/p&gt; &lt;pre&gt;# yum group install "Development Tools" # yum install readline-devel&lt;/pre&gt; &lt;p style="text-align: left;"&gt;f. Because we are going to do a binary installation of NGINX, we need to install &lt;code&gt;pcre&lt;/code&gt; and &lt;code&gt;zlib&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# yum install pcre # yum install pcre-devel # yum install zlib # yum install zlib-devel&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Now, we can execute the installation of NGINX navigating into NGINX binary directory: &lt;pre&gt;# cd nginx-1.13.6 # ./configure --prefix=/opt/nginx --with-http_ssl_module --with-ld-opt="-Wl,-rpath,/usr/local/lib/lua/5.1/" --add-module=/tmp/lua/ngx_devel_kit-0.3.0 --add-module=/tmp/lua/lua-nginx-module-0.10.13 --with-openssl=/tmp/lua/openssl-OpenSSL_1_0_2g # make -j2 # make install&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;After the successful execution of the installation command, NGINX will be installed in &lt;code&gt;/opt/nginx&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Create a directory called &lt;code&gt;ssl&lt;/code&gt; in the directory &lt;code&gt;/opt/nginx&lt;/code&gt; and generate a self-signed certificate:&lt;strong&gt;&lt;br /&gt; &lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;# mkdir /opt/nginx/ssl # cd /opt/nginx/ssl # openssl req -nodes -newkey rsa:2048 -keyout private.pem -out certificate.csr -subj "/C=IN/ST=WestBengal/L=Kolkata/O=Red Hat/OU=APS/CN=www.example.com" # openssl x509 -req -in certificate.csr -out certificate.pem -signkey private.pem&lt;/pre&gt; &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; certificate.csr can be submitted to a CA vendor to get the certificate signed.&lt;/li&gt; &lt;li&gt;Download &lt;a href="https://downloads.jboss.org/keycloak/4.4.0.Final/keycloak-4.4.0.Final.zip"&gt;Keycloak&lt;/a&gt; and extract it. Keycloak will be working as an Identity Provider and NGINX will act as a service provider. &lt;pre&gt;# wget https://downloads.jboss.org/keycloak/4.4.0.Final/keycloak-4.4.0.Final.zip # unzip  keycloak-4.4.0.Final.zip -d /opt/keycloak&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Configuring Keycloak and NGINX&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;Create a user in the master realm and start Keycloak: &lt;pre&gt;# cd /opt/keycloak/keycloak-4.4.0.Final/bin # ./add-user-keycloak.sh -u admin -p admin@123 -r master # ./standalone.sh -b www.example.com&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Create a new realm:&lt;br /&gt; a. Move the cursor near&lt;strong&gt; Master&lt;/strong&gt; and click&lt;strong&gt; Add Realm&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_055.png"&gt;&lt;img class=" aligncenter wp-image-521397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_055.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_055-300x96.png" alt="" width="300" height="96" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_055-300x96.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_055.png 475w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;br /&gt; b. Provide a name for your realm and click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;|&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_056.png"&gt;&lt;img class=" aligncenter wp-image-521387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_056.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_056-300x99.png" alt="" width="300" height="99" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_056-300x99.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_056.png 627w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Creation of a new realm is not necessary; it possible to create a client in the master realm.&lt;/li&gt; &lt;li&gt;Now, we need to create a client for NGINX. Click &lt;strong&gt;Client&lt;/strong&gt; in the left panel and click the &lt;strong&gt;Create&lt;/strong&gt; button: &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_057.png"&gt;&lt;img class=" aligncenter wp-image-521377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_057.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_057-300x140.png" alt="" width="300" height="140" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_057-300x140.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_057.png 707w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058.png"&gt;&lt;img class=" aligncenter wp-image-521367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058-1024x195.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058-1024x195.png" alt="" width="640" height="122" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058-1024x195.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058-300x57.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_058-768x146.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Select &lt;strong&gt;openid-connect&lt;/strong&gt; as the client protocol and place the NGINX URL in the &lt;strong&gt;Root URL&lt;/strong&gt; field:&lt;br /&gt; &lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059.png"&gt;&lt;img class=" aligncenter wp-image-521357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059-1024x296.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059-1024x296.png" alt="" width="640" height="185" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059-1024x296.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059-300x87.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059-768x222.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_059.png 1125w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Set &lt;strong&gt;Access Type&lt;/strong&gt; to &lt;strong&gt;confidential&lt;/strong&gt; and click &lt;strong&gt;Save&lt;/strong&gt;: &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060.png"&gt;&lt;img class=" aligncenter wp-image-521347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060-1024x393.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060-1024x393.png" alt="" width="640" height="246" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060-1024x393.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060-300x115.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060-768x295.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_060.png 1093w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Credentials&lt;/strong&gt; and copy the secret for configuring NGINX later: &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_061.png"&gt;&lt;img class=" aligncenter wp-image-521337 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_061.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_061.png" alt="" width="661" height="270" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_061.png 661w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Selection_061-300x123.png 300w" sizes="(max-width: 661px) 100vw, 661px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Add the following line under the &lt;code&gt;http&lt;/code&gt; block in &lt;code&gt;nginx.conf&lt;/code&gt;: &lt;pre&gt;lua_package_path '~/lua/?.lua;;'; resolver 8.8.8.8; # cache for discovery metadata documents lua_shared_dict discovery 1m; # cache for JWKs lua_shared_dict jwks 1m;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Create the server in NGINX using something like the following: &lt;pre&gt; server {        listen     80 default_server;        server_name  www.example.com;        root     /opt/nginx/html;        access_by_lua '          local opts = {            redirect_uri_path = "/redirect_uri",            accept_none_alg = true,            discovery = "http://www.example.com:8080/auth/realms/NGINX/.well-known/openid-configuration",            client_id = "nginx",            client_secret = "62d3b835-e3d1-4cec-a2f2-612f496bc6c3",            redirect_uri_scheme = "http",            logout_path = "/logout",            redirect_after_logout_uri = "http://www.example.com:8080/auth/realms/NGINX/protocol/openid-connect/logout?redirect_uri=http://www.example.com/",            redirect_after_logout_with_id_token_hint = false,            session_contents = {id_token=true}          }          -- call introspect for OAuth 2.0 Bearer Access Token validation          local res, err = require("resty.openidc").authenticate(opts)          if err then            ngx.status = 403            ngx.say(err)            ngx.exit(ngx.HTTP_FORBIDDEN)          end       ';       # I disabled caching so the browser won't cache the site.       expires           0;       add_header        Cache-Control private;       location / {       }       # redirect server error pages to the static page /40x.html       #       error_page 404 /404.html;           location = /40x.html {       }       # redirect server error pages to the static page /50x.html       #       error_page 500 502 503 504 /50x.html;           location = /50x.html {       }   }&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Validate the NGINX configuration: &lt;pre&gt;# cd /opt/nginx/sbin/ # ./nginx -t&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;After successful validation of the NGINX configuration, start the NGINX server: &lt;pre&gt;#./nginx&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now, when you access the protected URL (www.example.com), you will be redirected to Keycloak at http://www.example.com:8080/auth/realms/NGINX/. Aafter successful authentication, you will redirected back to the NGINX welcome page.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;linkname=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F08%2Fconfiguring-nginx-keycloak-oauth-oidc%2F&amp;#38;title=Configuring%20NGINX%20for%20OAuth%2FOpenID%20Connect%20SSO%20with%20Keycloak%2FRed%20Hat%20SSO" data-a2a-url="https://developers.redhat.com/blog/2018/10/08/configuring-nginx-keycloak-oauth-oidc/" data-a2a-title="Configuring NGINX for OAuth/OpenID Connect SSO with Keycloak/Red Hat SSO"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/08/configuring-nginx-keycloak-oauth-oidc/"&gt;Configuring NGINX for OAuth/OpenID Connect SSO with Keycloak/Red Hat SSO&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/t26ZEa20cr0" height="1" width="1" alt=""/&gt;</content><summary>In this article I cover configuring NGINX for OAuth-based Single Sign-On (SSO) using Keycloak/Red Hat SSO. This allows the use of OpenID Connect (OIDC) for federated identity. This configuration is helpful when NGINX is acting as a reverse-proxy server for a backend application server, for example, Tomcat or JBoss, where the authentication is to be performed by the web server. In this setup, Keycl...</summary><dc:creator>Siddhartha De</dc:creator><dc:date>2018-10-08T17:22:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/08/configuring-nginx-keycloak-oauth-oidc/</feedburner:origLink></entry><entry><title>Infinispan 9.4.0.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-3syRztQmbA/infinispan-940final.html" /><category term="9.4" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_9_4_0_final</id><updated>2018-10-08T07:47:14Z</updated><published>2018-10-08T07:34:00Z</published><content type="html">&lt;h2&gt;Infinispan 9.4.0.Final “Infinity Minus ONE +2”&lt;/h2&gt;&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;&lt;h3&gt;10 years of Infinispan&lt;/h3&gt;Infinispan is 10 years old this month, and what better way to celebrate than with a brand new Final release !!!&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;What's new&lt;/h3&gt;Infinispan 9.4 comes with the following new features / improvements:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Segments everywhere&lt;br /&gt;9.3 brought the segmented on-heap memory container. 9.4 extends this to provide the benefits of segmentation to off-heap as well as all of the core cache stores. Watch as your bulk operations (size, iteration, streams) get a big performance boost !&lt;/li&gt;&lt;li&gt;Transcoding everywhere&lt;br /&gt;To paraphrase the Grand Moff Tarkin, “The last remnants of Compatibility Mode have been swept away”. Transcoding, i.e. the ability to transparently convert between a number of formats across different endpoints, is now “fully operational”.&lt;/li&gt;&lt;li&gt;Transactions everywhere&lt;br /&gt;Hot Rod transactions now support recovery.&lt;/li&gt;&lt;li&gt;Hot Rod client improvements&lt;br /&gt;The Hot Rod client has received many improvements:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Client-side statistics, complete with JMX support&lt;/li&gt;&lt;li&gt;Improvements to the scalability and the behaviour of near-caches&lt;/li&gt;&lt;li&gt;All of the configuration can now be supplied via the properties, which also means easier integration with other frameworks, such as Spring Boot.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Query improvements&lt;br /&gt;Many cleanups and improvements&lt;/li&gt;&lt;li&gt;Bugfixes, stability, reliability&lt;br /&gt;Although not as exciting as new features, we continued our work to improve the stability, reliability and performance of all aspects of Infinispan.&lt;/li&gt;&lt;li&gt;Upgrades:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;As usual the latest and greatest JGroups 4.0.15 &lt;/li&gt;&lt;li&gt;The server is now based on WildFly 14&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3&gt;Get it, Use it, Ask us!&lt;/h3&gt;Please &lt;a href="http://infinispan.org/download/" target="_blank"&gt;download&lt;/a&gt;, &lt;a href="https://issues.jboss.org/projects/ISPN" target="_blank"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/" target="_blank"&gt;chat with us&lt;/a&gt;, &lt;a href="https://developer.jboss.org/en/infinispan/content" target="_blank"&gt;ask questions on the forum&lt;/a&gt; or on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest" target="_blank"&gt;StackOverflow&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/LCslUcbXdNE" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-3syRztQmbA" height="1" width="1" alt=""/&gt;</content><summary>Infinispan 9.4.0.Final “Infinity Minus ONE +2”   10 years of InfinispanInfinispan is 10 years old this month, and what better way to celebrate than with a brand new Final release !!! What's newInfinispan 9.4 comes with the following new features / improvements: Segments everywhere 9.3 brought the segmented on-heap memory container. 9.4 extends this to provide the benefits of segmentation to off-he...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2018-10-08T07:34:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/LCslUcbXdNE/infinispan-940final.html</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat Developer Studio for Eclipse 2018-09</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/CGKbueNAijo/12.9.0.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.9.0.html</id><updated>2018-10-09T09:17:08Z</updated><published>2018-10-08T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2018-09/4.9.0.Final.html"&gt;JBoss Tools 4.9.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2018-09/12.9.0.GA.html"&gt;Red Hat Developer Studio 12.9&lt;/a&gt; for Eclipse 2018-09 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/devstudio12.png" alt="devstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat Developer Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat Developer product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar devstudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) Developer Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.9 (2018-09) but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2018-09/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.9 2018-09 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat Developer Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was on adoption of Java11, improvements for container based development and bug fixing. Eclipse 2018-09 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2018-09 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift-3"&gt;&lt;a class="anchor" href="#openshift-3"&gt;&lt;/a&gt;OpenShift 3&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="inner-loop-for-spring-boot-applications"&gt;&lt;a class="anchor" href="#inner-loop-for-spring-boot-applications"&gt;&lt;/a&gt;Inner loop for Spring Boot applications&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Although Spring Boot applications were already supported by the OpenShift server adapter, the global developer experience has been enhanced. Let’s complete the full workflow.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="bootstrapping-your-spring-boot-applications"&gt;&lt;a class="anchor" href="#bootstrapping-your-spring-boot-applications"&gt;&lt;/a&gt;Bootstrapping your Spring Boot applications&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new generator (wizard) has been added to JBoss Tools. It’s called the Launcher application as it’s based on the fabric8-launcher project. When you launch JBoss Tools, you should see this in Red Hat Central:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop.png" alt="spring boot inner loop" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;Launcher application&lt;/code&gt;&lt;/code&gt; link and the following wizard will appear:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop1.png" alt="spring boot inner loop1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Switch the &lt;code&gt;&lt;code&gt;Mission&lt;/code&gt;&lt;/code&gt; field to &lt;code&gt;&lt;code&gt;rest-http &lt;/code&gt;&lt;/code&gt; as we want to generate a simple REST application and switch the &lt;code&gt;&lt;code&gt;Runtime&lt;/code&gt;&lt;/code&gt; field to &lt;code&gt;&lt;code&gt;spring-boot current-community&lt;/code&gt;&lt;/code&gt; as we want to generate a Spring Boot based application.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then set the &lt;code&gt;&lt;code&gt;Project name&lt;/code&gt;&lt;/code&gt; field to &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; and leave other fields as-is.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop2.png" alt="spring boot inner loop2" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button. A new project will be added to your local workspace. It may takes some times as Maven will resolve all the Spring Boot dependencies and thus need to download them from the Internet.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the project is build and if you expand the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;Project explorer&lt;/code&gt;&lt;/code&gt; window, you should see this:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop3.png" alt="spring boot inner loop3" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="storing-your-source-code-on-github"&gt;&lt;a class="anchor" href="#storing-your-source-code-on-github"&gt;&lt;/a&gt;Storing your source code on GitHub&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As OpenShift builder images retrieves code on a Git repository, we first need to push the just generated application code to GitHub. The following section assumes that you created a repository called &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; under your GitHub account.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will first create a local Git repository for our application code then push it to GitHub.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project and right click the &lt;code&gt;&lt;code&gt;Team → Share project…​&lt;/code&gt;&lt;/code&gt; menu item:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop4.png" alt="spring boot inner loop4" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then select the &lt;code&gt;&lt;code&gt;Git&lt;/code&gt;&lt;/code&gt; repository type and click the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop5.png" alt="spring boot inner loop5" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the &lt;code&gt;&lt;code&gt;Use or create repository in parent folder of project&lt;/code&gt;&lt;/code&gt; checkbox then select the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop6.png" alt="spring boot inner loop6" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;Create repository&lt;/code&gt;&lt;/code&gt; button and the on the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;&lt;code&gt;Project explorer&lt;/code&gt;&lt;/code&gt; view is updated:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop7.png" alt="spring boot inner loop7" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project and right click the &lt;code&gt;&lt;code&gt;Team → Show in Repositories View&lt;/code&gt;&lt;/code&gt; menu item. A new view called &lt;code&gt;&lt;code&gt;Git Repositories&lt;/code&gt;&lt;/code&gt; will be added to the perspective:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop8.png" alt="spring boot inner loop8" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Inside this view, select the &lt;code&gt;&lt;code&gt;Remotes&lt;/code&gt;&lt;/code&gt; node and right click the &lt;code&gt;&lt;code&gt;Create Remote…​&lt;/code&gt;&lt;/code&gt; menu item. The following dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop9.png" alt="spring boot inner loop9" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; button, the following dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop10.png" alt="spring boot inner loop10" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;Change…​&lt;/code&gt;&lt;/code&gt; button and enter &lt;code&gt;&lt;code&gt;git@github.com:GITHUB_USER/myfirstrestapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/code&gt; field, replacing &lt;code&gt;&lt;code&gt;GITHUB_USER&lt;/code&gt;&lt;/code&gt; by your real GitHub user name.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then click the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button and then on the &lt;code&gt;&lt;code&gt;Save&lt;/code&gt;&lt;/code&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="pushing-code-to-github"&gt;&lt;a class="anchor" href="#pushing-code-to-github"&gt;&lt;/a&gt;Pushing code to GitHub&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are now ready to push our application code to GitHub. Select the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project in the &lt;code&gt;&lt;code&gt;Project explorer&lt;/code&gt;&lt;/code&gt; view, right click the &lt;code&gt;&lt;code&gt;Team → Commit&lt;/code&gt;&lt;/code&gt; menu item. A new view call &lt;code&gt;&lt;code&gt;Git Staging&lt;/code&gt;&lt;/code&gt; will open:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop11.png" alt="spring boot inner loop11" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Double click on the view title to maximize it:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop12.png" alt="spring boot inner loop12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select all the files listed in the &lt;code&gt;&lt;code&gt;Unstaged changes&lt;/code&gt;&lt;/code&gt; list and click the &amp;apos;+&amp;apos; button. The files will then move to the &lt;code&gt;&lt;code&gt;Staged Changes&lt;/code&gt;&lt;/code&gt; list:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop13.png" alt="spring boot inner loop13" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter a commit message (ex &amp;apos;Initial version&amp;apos;) and click the &lt;code&gt;&lt;code&gt;Commit and Push…​&lt;/code&gt;&lt;/code&gt; button. the following dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop14.png" alt="spring boot inner loop14" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop15.png" alt="spring boot inner loop15" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click on the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button to start the push operation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A dialog with the result of the push operation will be displayed. Click the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; to dismiss it.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="add-spring-boot-devtools-to-the-packaged-application"&gt;&lt;a class="anchor" href="#add-spring-boot-devtools-to-the-packaged-application"&gt;&lt;/a&gt;Add Spring Boot Devtools to the packaged application&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to support live update on an OpenShift cluster, we must add Spring Boot DevTools to our Spring Boot application.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Open the &lt;code&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt;. Locate the &lt;code&gt;&lt;code&gt;spring-boot-maven-plugin&lt;/code&gt;&lt;/code&gt; and add the following section:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-xml" data-lang="xml"&gt; &amp;lt;configuration&amp;gt; &amp;lt;excludeDevtools&amp;gt;false&amp;lt;/excludeDevtools&amp;gt; &amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The whole &lt;code&gt;&lt;code&gt;spring-boot-maven-plugin&lt;/code&gt;&lt;/code&gt; section is given below:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-xml" data-lang="xml"&gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;excludeDevtools&amp;gt;false&amp;lt;/excludeDevtools&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Close and save the &lt;code&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/code&gt; file.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Push the change to GitHub: select the &lt;code&gt;&lt;code&gt;Team → Commit…​&lt;/code&gt;&lt;/code&gt; with a new commit message (ex &amp;apos;With DevTools&amp;apos;)&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="deploy-the-application-on-openshift"&gt;&lt;a class="anchor" href="#deploy-the-application-on-openshift"&gt;&lt;/a&gt;Deploy the application on OpenShift&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Before we can deploy the application on OpenShift, we must first create an ImageStream on our OpenShift cluster. The reason is that the Spring Boot support relies on S2I builds that will explode the Spring Boot uber JAR when Spring Boot DevTools is present. As this is not supported by all Java based S2I images, we will use one that supports it, ie fabric8/s2i-java:2.2&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First, in the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project, create a new JSON file called &lt;code&gt;&lt;code&gt;springboot.json&lt;/code&gt;&lt;/code&gt; and set the content of this file to:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-json" data-lang="json"&gt;{ &amp;quot;apiVersion&amp;quot;: &amp;quot;image.openshift.io/v1&amp;quot;, &amp;quot;kind&amp;quot;: &amp;quot;ImageStream&amp;quot;, &amp;quot;metadata&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;springboot&amp;quot; }, &amp;quot;spec&amp;quot;: { &amp;quot;lookupPolicy&amp;quot;: { &amp;quot;local&amp;quot;: false }, &amp;quot;tags&amp;quot;: [ { &amp;quot;annotations&amp;quot;: { &amp;quot;tags&amp;quot;: &amp;quot;builder,java&amp;quot; }, &amp;quot;from&amp;quot;: { &amp;quot;kind&amp;quot;: &amp;quot;DockerImage&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;registry.access.redhat.com/fuse7/fuse-java-openshift:1.1&amp;quot; }, &amp;quot;importPolicy&amp;quot;: {}, &amp;quot;name&amp;quot;: &amp;quot;1.1&amp;quot;, &amp;quot;referencePolicy&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;Source&amp;quot; } } ] } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then, from the OpenShift explorer view, select the OpenShift connection for your cluster (if you don’t have one already defined, you must define it), right click on the &lt;code&gt;&lt;code&gt;New → Resource…​&lt;/code&gt;&lt;/code&gt; menu item and the following dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop16.png" alt="spring boot inner loop16" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can select the OpenShift project you want to work with and then click on the &lt;code&gt;&lt;code&gt;Browse Workspace…​&lt;/code&gt;&lt;/code&gt; button and select the &lt;code&gt;&lt;code&gt;springboot.json&lt;/code&gt;&lt;/code&gt; file in the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop17.png" alt="spring boot inner loop17" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; buttons. The new ImageStream will be created and a status dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop18.png" alt="spring boot inner loop18" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect5"&gt; &lt;h6 id="create-the-application-on-openshift"&gt;&lt;a class="anchor" href="#create-the-application-on-openshift"&gt;&lt;/a&gt;Create the application on OpenShift&lt;/h6&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re now ready to create the application on the OpenShift cluster. Select the OpenShift connection, right click the &lt;code&gt;&lt;code&gt;New → Application…​&lt;/code&gt;&lt;/code&gt; menu item. If you scroll down the list, you should see the &lt;code&gt;&lt;code&gt;springboot&lt;/code&gt;&lt;/code&gt; ImageStream we just created:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop19.png" alt="spring boot inner loop19" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select this ImageStream and click the &lt;code&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop20.png" alt="spring boot inner loop20" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enter &lt;code&gt;&lt;code&gt;`myfirstrestapp&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;`Name&lt;/code&gt;&lt;code&gt; field, &lt;/code&gt;`https://github.com/GITHUB_USER/myfirstrestapp&lt;code&gt;&lt;/code&gt; in the &lt;/code&gt;&lt;code&gt;Git Repository URL&lt;code&gt;&lt;/code&gt; field, replacing &lt;/code&gt;&lt;code&gt;GITHUB_USER&lt;code&gt;&lt;/code&gt; by your real GitHub user name and click the &lt;/code&gt;&lt;code&gt;Next``&lt;/code&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On the &lt;code&gt;&lt;code&gt;Deployment Configuration &amp;amp; Scalability&lt;/code&gt;&lt;/code&gt; dialog, click the &lt;code&gt;&lt;code&gt;`Next&lt;/code&gt;&lt;/code&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;On the &lt;code&gt;&lt;code&gt;Service &amp;amp; Routing Settings&lt;/code&gt;&lt;/code&gt;, select the &lt;code&gt;&lt;code&gt;8778-tcp&lt;/code&gt;&lt;/code&gt; port and click the &lt;code&gt;&lt;code&gt;Edit&lt;/code&gt;&lt;/code&gt; button, change the 8787 value to 8080:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop21.png" alt="spring boot inner loop21" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; button then the &lt;code&gt;&lt;code&gt;Finish&lt;/code&gt;&lt;/code&gt; button.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The list of OpenShift resources created will be displayed by a dialog:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop22.png" alt="spring boot inner loop22" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; button to dismiss it and when asked to import the application code, click the &lt;code&gt;&lt;code&gt;Cancel&lt;/code&gt;&lt;/code&gt; button as we already have the source code.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;After the build is run (this may takes several minutes as the Maven build will download lots of dependencies), you should see a running pod:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop23.png" alt="spring boot inner loop23" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="inner-loop-setup"&gt;&lt;a class="anchor" href="#inner-loop-setup"&gt;&lt;/a&gt;Inner loop setup&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We are going to synchronize the local Eclipse project with the remote OpenShift pod. Each time a file will be modified locally, then the pod will be updated accordingly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select the running pod in the &lt;code&gt;&lt;code&gt;OpenShift explorer&lt;/code&gt;&lt;/code&gt;, right click the &lt;code&gt;&lt;code&gt;Server Adapter…​&lt;/code&gt;&lt;/code&gt; menu item, the following dialog will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop24.png" alt="spring boot inner loop24" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Click the &lt;code&gt;&lt;code&gt;OK&lt;/code&gt;&lt;/code&gt; button, the initial synchronization will be started and the &lt;code&gt;&lt;code&gt;Servers&lt;/code&gt;&lt;/code&gt; view will be displayed:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop25.png" alt="spring boot inner loop25" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve not setup the synchronization between our local Eclipse project and the remote OpenShift project. Each modification done locally will be reported on the remote OpenShift cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s modify our local application code and see the changes applied almost instantly:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Edit the file &lt;code&gt;&lt;code&gt;src/main/java/io/openshift/booster/service/Greeting.java&lt;/code&gt;&lt;/code&gt; in the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; project and change the &lt;code&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/code&gt; string value from &lt;code&gt;&lt;code&gt;Hello, %s!&lt;/code&gt;&lt;/code&gt; to &lt;code&gt;&lt;code&gt;Hello, Mr %s!&lt;/code&gt;&lt;/code&gt; and save the file.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The file should be now:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;/* * Copyright 2016-2017 Red Hat, Inc, and individual contributors. * * Licensed under the Apache License, Version 2.0 (the &amp;quot;License&amp;quot;); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an &amp;quot;AS IS&amp;quot; BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ package io.openshift.booster.service; // tag::snippet-greeting[] public class Greeting { public static final String FORMAT = &amp;quot;Hello, Mr %s!&amp;quot;; private final String content; public Greeting() { this.content = null; } public Greeting(String content) { this.content = content; } public String getContent() { return content; } } // end::snippet-greeting[]&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Then, in the &lt;code&gt;ÒpenShift explorer&lt;/code&gt;` view, select the &lt;code&gt;&lt;code&gt;myfirstrestapp&lt;/code&gt;&lt;/code&gt; deployment and select the &lt;code&gt;&lt;code&gt;`Show In → Web Browser&lt;/code&gt;&lt;/code&gt; menu item and once the web browser is displayed, ckick the &lt;code&gt;&lt;code&gt;Invoke&lt;/code&gt;&lt;/code&gt; button, you should see the following view:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/spring-boot-inner-loop26.png" alt="spring boot inner loop26" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You’ve just experienced the inner loop on your Spring Boot application: any change done locally is reported and testable almost immedialtely on your OpenShift cluster.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can restart the deployment in debug mode and you’ll be able to remote debug your Spring Boot application. Amazing, no ?&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="server-tools"&gt;&lt;a class="anchor" href="#server-tools"&gt;&lt;/a&gt;Server tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-14-server-adapter"&gt;&lt;a class="anchor" href="#wildfly-14-server-adapter"&gt;&lt;/a&gt;Wildfly 14 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 14. It adds support for Java EE 8.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.6.Final and Hibernate Tools version 5.3.6.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.17.Final and Hibernate Tools version 5.2.11.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.1 runtime provider now incorporates Hibernate Core version 5.1.16.Final and Hibernate Tools version 5.1.10.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="fuse-tooling"&gt;&lt;a class="anchor" href="#fuse-tooling"&gt;&lt;/a&gt;Fuse Tooling&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="rest-viewer-becoming-an-editor"&gt;&lt;a class="anchor" href="#rest-viewer-becoming-an-editor"&gt;&lt;/a&gt;REST Viewer becoming an editor&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Previously, there was a REST editor which was read-only. It is useful to have a great overview of already defined Camel REST DSL definitions. Now the editor and its related properties tab are also providing editing capabilities allowing to develop faster.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/fusetools/images/fuse-editor-rest-tab-properties-11.1.0.am2.jpg" alt="Fully Editable REST Editor" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Create and delete REST Configurations&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Create and delete new REST Elements&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Create and delete new REST Operations&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Edit properties for a selected REST Element in the Properties view&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Edit properties for a selected REST Operation in the Properties view&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In addition, we’ve improved the look and feel by fixing the scrolling capabilities of the REST Element and REST Operations lists.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improved-breadcrumb-for-dark-theme"&gt;&lt;a class="anchor" href="#improved-breadcrumb-for-dark-theme"&gt;&lt;/a&gt;Improved Breadcrumb for Dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Breadcrumb&lt;/strong&gt; in the &lt;strong&gt;Java Editor&lt;/strong&gt; now uses a dark background in the Dark theme.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/breadcrumb_dark_and_light.png" alt="breadcrumb dark and light" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the Light theme, the &lt;strong&gt;Breadcrumb&lt;/strong&gt; uses a flat look style instead of a gradient.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-to-create-abstract-methods"&gt;&lt;a class="anchor" href="#quick-fix-to-create-abstract-methods"&gt;&lt;/a&gt;Quick fix to create abstract methods&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The existing quick fix to create missing methods has been improved to create abstract method declarations. The option only appears when the target class is an abstract class.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/quickfix_create_abstract_method_1.png" alt="quickfix create abstract method 1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-to-convert-to-static-import"&gt;&lt;a class="anchor" href="#quick-fix-to-convert-to-static-import"&gt;&lt;/a&gt;Quick fix to convert to static import&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new quick fix has been implemented that allows the user to convert static field accesses and static methods to use a static import. It’s also possible to replace all occurrences at the same time.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/quickfix_convert_to_static_import.png" alt="quickfix convert to static import" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-code-generation"&gt;&lt;a class="anchor" href="#java-code-generation"&gt;&lt;/a&gt;Java Code Generation&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improved-hashcode-and-equals-generation"&gt;&lt;a class="anchor" href="#improved-hashcode-and-equals-generation"&gt;&lt;/a&gt;Improved hashCode() and equals() generation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new option in the &lt;strong&gt;Source &amp;gt; Generate hashCode() and equals()…​&lt;/strong&gt; tool allows you to create implementations using the Java 7 &lt;code&gt;&lt;code&gt;Objects.equals&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Objects.hash&lt;/code&gt;&lt;/code&gt; methods.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/hashcode-equals-dialog.png" alt="hashcode equals dialog" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The above setup generates the following code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/hashcode-equals-generation.png" alt="hashcode equals generation" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Additionally, arrays are handled more cleverly. The generation prefers the &lt;code&gt;&lt;code&gt;Arrays.deepHashCode&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Arrays.deepEquals&lt;/code&gt;&lt;/code&gt; methods when dealing with &lt;code&gt;&lt;code&gt;Object[]&lt;/code&gt;&lt;/code&gt;, &lt;code&gt;&lt;code&gt;Serializable[]&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;Cloneable[]&lt;/code&gt;&lt;/code&gt; or any type variables extending these types.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-views-and-dialogs"&gt;&lt;a class="anchor" href="#java-views-and-dialogs"&gt;&lt;/a&gt;Java Views and Dialogs&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-for-jre-compiler-compliance-problem-marker"&gt;&lt;a class="anchor" href="#quick-fix-for-jre-compiler-compliance-problem-marker"&gt;&lt;/a&gt;Quick Fix for JRE Compiler Compliance Problem Marker&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new quick fix is provided on the &lt;strong&gt;JRE Compiler Compilance&lt;/strong&gt; problem marker which is created when the compiler compliance does not match the JRE being used. This quick fix provides the option of opening the &lt;strong&gt;Compiler Compliance&lt;/strong&gt; page of the project to fix the issue.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/quickfix_open_cc_page.png" alt="quickfix open cc page" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Selecting this option opens the &lt;strong&gt;Compiler Compliance&lt;/strong&gt; property page for the specified project as shown below.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/quickfix_cc_page.png" alt="quickfix cc page" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="open-type-dialog-now-always-shows-the-full-path"&gt;&lt;a class="anchor" href="#open-type-dialog-now-always-shows-the-full-path"&gt;&lt;/a&gt;Open Type dialog now always shows the full path&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;Open Type&lt;/strong&gt; dialog now always shows the full path of all the matching items.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/open_type_full_path.png" alt="open type full path" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-formatter"&gt;&lt;a class="anchor" href="#java-formatter"&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="keep-simple-loops-in-one-line"&gt;&lt;a class="anchor" href="#keep-simple-loops-in-one-line"&gt;&lt;/a&gt;Keep simple loops in one line&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New formatter settings have been added that make it possible to keep the bodies of simple loops (without braces) in the same line as their headers, similar to previously existing setting for simple &amp;apos;if&amp;apos; statements. Different kind of loops (&amp;apos;for&amp;apos;, &amp;apos;while&amp;apos;, &amp;apos;do while&amp;apos;) can be controlled independently.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The settings can be found in the profile editor under &lt;strong&gt;New Lines &amp;gt; In control statements &amp;gt; Simple Loops&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/formatter-compact-loops.png" alt="formatter compact loops" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There’s also a new setting to control how these loops should be handled if they exceed the maximum line width. It’s located under &lt;strong&gt;Line Wrapping &amp;gt; Wrapping settings &amp;gt; Statements &amp;gt; Compact loops (&amp;apos;for&amp;apos;, &amp;apos;while&amp;apos;, &amp;apos;do while&amp;apos;)&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/formatter-compact-loops-wrap.png" alt="formatter compact loops wrap" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="align-items-in-columns"&gt;&lt;a class="anchor" href="#align-items-in-columns"&gt;&lt;/a&gt;Align items in columns&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A feature previously known as &lt;strong&gt;align fields in columns&lt;/strong&gt; has been expanded and can now be used for &lt;strong&gt;variable declarations&lt;/strong&gt; and &lt;strong&gt;assignment statements&lt;/strong&gt; as well.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;An option has also been added to always &lt;strong&gt;align with spaces&lt;/strong&gt;, even if tabs are used for general indentation. This is very similar to the &lt;strong&gt;Use spaces to indent wrapped lines&lt;/strong&gt; option and is useful to make the code look good in editors with differing tab width.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All the settings related to aligning are now in the new preferences subsection: &lt;strong&gt;Indentation &amp;gt; Align items in columns&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/formatter-align-in-columns.png" alt="formatter align in columns" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="timeout-for-result-of-step-operation"&gt;&lt;a class="anchor" href="#timeout-for-result-of-step-operation"&gt;&lt;/a&gt;Timeout for result of step operation&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Observing the result of step operations may slow down execution, which may be unusable if the step takes long already. Therefore a timeout (default: 7000 ms) has been introduced after which the observation mechanism is disabled until the end of the step operation.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/result_timeout_537142.png" alt="result timeout 537142" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The timeout can be configured in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Debug &amp;gt; Don’t show if step operation takes longer than (ms)&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="option-to-hide-running-threads-in-debug-view"&gt;&lt;a class="anchor" href="#option-to-hide-running-threads-in-debug-view"&gt;&lt;/a&gt;Option to hide running threads in Debug view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new option has been introduced in the &lt;strong&gt;Debug&lt;/strong&gt; view to show or hide running threads.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hiding running threads can be useful when debugging heavily multithreaded application, when it is difficult to find threads stopped at breakpoints among hundreds or thousands of running threads.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/hide-running-threads.png" alt="hide running threads" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-command-line-button-in-launch-configuration"&gt;&lt;a class="anchor" href="#show-command-line-button-in-launch-configuration"&gt;&lt;/a&gt;Show Command Line button in Launch Configuration&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new button &lt;strong&gt;Show Command Line&lt;/strong&gt; has been added in the &lt;strong&gt;Java Launch Configuration&lt;/strong&gt; dialog.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/show_command_line.png" alt="show command line" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Clicking the button will open a dialog to show the command line used for launching the application.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/show_command_line_detail.png" alt="show command line detail" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="option-to-disable-thread-name-changes-in-debug-view"&gt;&lt;a class="anchor" href="#option-to-disable-thread-name-changes-in-debug-view"&gt;&lt;/a&gt;Option to disable thread name changes in Debug View&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thread name changes in the debuggee JVM are reflected in the &lt;strong&gt;Debug&lt;/strong&gt; View. A VM option can now be used to disable this behavior, in case the JVM communication necessary for the name updates is not desired.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The functionality can be disabled by specifying the following VM option&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="prettyprint highlight"&gt;&lt;code&gt;-Dorg.eclipse.jdt.internal.debug.core.model.ThreadNameChangeListener.disable=true&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-long-classpath-modulepath"&gt;&lt;a class="anchor" href="#support-for-long-classpath-modulepath"&gt;&lt;/a&gt;Support for long classpath/modulepath&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Classpath and/or modulepath are now shortened if they are longer than current operating system limits.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If a temporary jar is needed to shorten the classpath (Java 8 and previous versions), a dialog is shown asking for confirmation.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/enable-classpathonly-dialog.png" alt="enable classpathonly dialog" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The option &lt;strong&gt;Use temporary jar to specify classpath (to avoid classpath length limitations)&lt;/strong&gt; is available in the &lt;strong&gt;Classpath&lt;/strong&gt; tab of the &lt;strong&gt;Run/Debug Configuration&lt;/strong&gt; dialog.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.9/images/enable-classpathonly-option.png" alt="enable classpathonly option" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And more…​&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.9.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.9.0 and Red Hat Developer Studio 12.9 out we are already working on the next release for Eclipse 2018-12.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/CGKbueNAijo" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.9.0 and Red Hat Developer Studio 12.9 for Eclipse 2018-09 are here waiting for you. Check it out! Installation Red Hat Developer Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat Developer product page and run it like this: java -jar devstudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) Developer Studio require a bit more: This release requires at least Eclipse 4.9 (2018-09) but we recommend using the latest Eclipse 4.9 2018-09 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2018-10-08T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.9.0.html</feedburner:origLink></entry></feed>
